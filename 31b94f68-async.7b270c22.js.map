{"version":3,"sources":["docs/manual/core-concept/palette.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/manual/core-concept/palette.en.md?watch=parent';\n  export const texts = [{\"value\":\"A palette refers to a set of predefined color collections that help users more conveniently select colors. In G6, a palette is a common option that allows users to configure the colors of elements such as nodes, edges, and links through the palette.\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"Palettes are divided into two types: \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"discrete palette\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" and \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"continuous palette\",\"paraId\":1,\"tocIndex\":0},{\"value\":\".\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"A discrete palette is an array of colors used to map discrete values within elements to different colors, such as the type of nodes, the relationship of edges, etc. Below is a simple example of a discrete palette:\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"['#5B8FF9', '#61DDAA', '#F6BD16', '#F6903D', '#F08BB4'];\\n\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"A continuous palette is an interpolator that takes a value between 0 and 1 and returns the corresponding color. It is used to map continuous values within elements to different colors, such as the degree of nodes, the weight of edges, etc. Below is a simple example of a continuous palette:\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"(value: number) => `rgb(${value * 255}, 0, 0)`;\\n\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"You can directly use the built-in palettes, but if you want to use other palettes, you need to register them first:\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"import { register, ExtensionCategory } from '@antv/g6';\\nimport { CustomPalette } from 'package-name/or/path-to-your-custom-palette';\\n\\nregister(ExtensionCategory.PALETTE, 'custom-palette', CustomPalette);\\n\",\"paraId\":7,\"tocIndex\":1},{\"value\":\"During the process of registering a palette, there is no distinction made between discrete and continuous palettes. It is necessary to ensure the consistency between the palette type and the data type when using the palette.\",\"paraId\":8},{\"value\":\"Currently, G6 has 5 sets of commonly used discrete palettes that users can directly utilize:\",\"paraId\":9,\"tocIndex\":2},{\"value\":\"spectral\",\"paraId\":10,\"tocIndex\":2},{\"value\":\"tableau\",\"paraId\":11,\"tocIndex\":2},{\"value\":\"oranges\",\"paraId\":12,\"tocIndex\":2},{\"value\":\"greens\",\"paraId\":13,\"tocIndex\":2},{\"value\":\"blues\",\"paraId\":14,\"tocIndex\":2},{\"value\":\"Currently, the configuration of palettes is mainly focused on elements, taking nodes as an example:\",\"paraId\":15,\"tocIndex\":3},{\"value\":\"Default Configuration: By directly setting the value of \",\"paraId\":16,\"tocIndex\":4},{\"value\":\"palette\",\"paraId\":16,\"tocIndex\":4},{\"value\":\" to the name of the palette, each node will be assigned a different color by default\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"{\\n  node: {\\n    palette: 'spectral', // spectral is the Palette Name\\n  }\\n}\\n\",\"paraId\":17,\"tocIndex\":4},{\"value\":\"createGraph(\\n  {\\n    data: {\\n      nodes: new Array(30).fill(0).map((_, i) => ({ id: `node-${i}` })),\\n    },\\n    layout: { type: 'grid', cols: 10, rows: 3 },\\n    node: {\\n      palette: 'spectral',\\n    },\\n  },\\n  { width: 400, height: 100 },\\n);\\n\",\"paraId\":18,\"tocIndex\":4},{\"value\":\"When the number of elements exceeds the number of colors in the palette, the colors in the palette will be reused in a cyclic manner.\",\"paraId\":19,\"tocIndex\":4},{\"value\":\"Standard Configuration: The attributes for configuring a discrete palette include: \",\"paraId\":20,\"tocIndex\":4},{\"value\":\"type: 'group'\",\"paraId\":20,\"tocIndex\":4},{\"value\":\", \",\"paraId\":20,\"tocIndex\":4},{\"value\":\"field\",\"paraId\":20,\"tocIndex\":4},{\"value\":\", \",\"paraId\":20,\"tocIndex\":4},{\"value\":\"color\",\"paraId\":20,\"tocIndex\":4},{\"value\":\", \",\"paraId\":20,\"tocIndex\":4},{\"value\":\"invert\",\"paraId\":20,\"tocIndex\":4},{\"value\":\".\",\"paraId\":20,\"tocIndex\":4},{\"value\":\"Among them, \",\"paraId\":21,\"tocIndex\":4},{\"value\":\"type: 'group'\",\"paraId\":21,\"tocIndex\":4},{\"value\":\" explicitly specifies that the current palette type is a discrete palette; \",\"paraId\":21,\"tocIndex\":4},{\"value\":\"field\",\"paraId\":21,\"tocIndex\":4},{\"value\":\" designates the field for grouping in the element data; \",\"paraId\":21,\"tocIndex\":4},{\"value\":\"color\",\"paraId\":21,\"tocIndex\":4},{\"value\":\" is the name of the palette; \",\"paraId\":21,\"tocIndex\":4},{\"value\":\"invert\",\"paraId\":21,\"tocIndex\":4},{\"value\":\" indicates whether to invert the palette.\",\"paraId\":21,\"tocIndex\":4},{\"value\":\"Given a set of example data:\",\"paraId\":22,\"tocIndex\":4},{\"value\":\"{\\n  \\\"nodes\\\": [\\n    { \\\"id\\\": \\\"node-1\\\", \\\"data\\\": { \\\"category\\\": \\\"A\\\" } },\\n    { \\\"id\\\": \\\"node-2\\\", \\\"data\\\": { \\\"category\\\": \\\"B\\\" } },\\n    { \\\"id\\\": \\\"node-3\\\", \\\"data\\\": { \\\"category\\\": \\\"C\\\" } },\\n    { \\\"id\\\": \\\"node-4\\\", \\\"data\\\": { \\\"category\\\": \\\"A\\\" } },\\n    { \\\"id\\\": \\\"node-5\\\", \\\"data\\\": { \\\"category\\\": \\\"B\\\" } },\\n    { \\\"id\\\": \\\"node-6\\\", \\\"data\\\": { \\\"category\\\": \\\"C\\\" } }\\n  ]\\n}\\n\",\"paraId\":23,\"tocIndex\":4},{\"value\":\"In the data, \",\"paraId\":24,\"tocIndex\":4},{\"value\":\"node-1\",\"paraId\":24,\"tocIndex\":4},{\"value\":\" and \",\"paraId\":24,\"tocIndex\":4},{\"value\":\"node-4\",\"paraId\":24,\"tocIndex\":4},{\"value\":\" belong to category A, \",\"paraId\":24,\"tocIndex\":4},{\"value\":\"node-2\",\"paraId\":24,\"tocIndex\":4},{\"value\":\" and \",\"paraId\":24,\"tocIndex\":4},{\"value\":\"node-5\",\"paraId\":24,\"tocIndex\":4},{\"value\":\" belong to category B, \",\"paraId\":24,\"tocIndex\":4},{\"value\":\"node-3\",\"paraId\":24,\"tocIndex\":4},{\"value\":\" and \",\"paraId\":24,\"tocIndex\":4},{\"value\":\"node-6\",\"paraId\":24,\"tocIndex\":4},{\"value\":\" belong to category C.\",\"paraId\":24,\"tocIndex\":4},{\"value\":\"Configure the color of the nodes in such a way that nodes of the same category have the same color:\",\"paraId\":25,\"tocIndex\":4},{\"value\":\"{\\n  node: {\\n    palette: {\\n      type: 'group', // Specify the palette type as a categorical palette.\\n      field: 'category', // Specify the grouping field in the data.\\n      color: 'tableau', // Use a Tableau-like palette.\\n    }\\n  }\\n}\\n\",\"paraId\":26,\"tocIndex\":4},{\"value\":\"createGraph(\\n  {\\n    data: {\\n      nodes: new Array(6).fill(0).map((_, i) => ({ id: `node-${i}`, data: { category: ['A', 'B', 'C'][i % 3] } })),\\n    },\\n    layout: { type: 'grid', cols: 6 },\\n    node: {\\n      palette: {\\n        type: 'group',\\n        field: 'category',\\n        color: 'tableau',\\n      },\\n    },\\n  },\\n  { width: 200, height: 50 },\\n);\\n\",\"paraId\":27,\"tocIndex\":4},{\"value\":\"A continuous palette only supports standard configuration methods, with configuration properties including: \",\"paraId\":28,\"tocIndex\":5},{\"value\":\"type: 'value'\",\"paraId\":28,\"tocIndex\":5},{\"value\":\", \",\"paraId\":28,\"tocIndex\":5},{\"value\":\"field\",\"paraId\":28,\"tocIndex\":5},{\"value\":\", \",\"paraId\":28,\"tocIndex\":5},{\"value\":\"color\",\"paraId\":28,\"tocIndex\":5},{\"value\":\", \",\"paraId\":28,\"tocIndex\":5},{\"value\":\"invert\",\"paraId\":28,\"tocIndex\":5},{\"value\":\".\",\"paraId\":28,\"tocIndex\":5},{\"value\":\"Given a set of example data:\",\"paraId\":29,\"tocIndex\":5},{\"value\":\"{\\n  \\\"nodes\\\": [\\n    { \\\"id\\\": \\\"node-1\\\", \\\"data\\\": { \\\"value\\\": 0 } },\\n    { \\\"id\\\": \\\"node-2\\\", \\\"data\\\": { \\\"value\\\": 20 } },\\n    { \\\"id\\\": \\\"node-3\\\", \\\"data\\\": { \\\"value\\\": 40 } },\\n    { \\\"id\\\": \\\"node-4\\\", \\\"data\\\": { \\\"value\\\": 60 } },\\n    { \\\"id\\\": \\\"node-5\\\", \\\"data\\\": { \\\"value\\\": 80 } },\\n    { \\\"id\\\": \\\"node-6\\\", \\\"data\\\": { \\\"value\\\": 100 } }\\n  ]\\n}\\n\",\"paraId\":30,\"tocIndex\":5},{\"value\":\"Now, create an interpolator that maps the maximum value to red (\",\"paraId\":31,\"tocIndex\":5},{\"value\":\"rgb(255, 0, 0)\",\"paraId\":31,\"tocIndex\":5},{\"value\":\") and the minimum value to black (\",\"paraId\":31,\"tocIndex\":5},{\"value\":\"rgb(0, 0, 0)\",\"paraId\":31,\"tocIndex\":5},{\"value\":\"):\",\"paraId\":31,\"tocIndex\":5},{\"value\":\"(value) => `rgb(${value * 255}, 0, 0)`;\\n\",\"paraId\":32,\"tocIndex\":5},{\"value\":\"Configure the following so that the color of the nodes is mapped to different colors based on the value of the \",\"paraId\":33,\"tocIndex\":5},{\"value\":\"value\",\"paraId\":33,\"tocIndex\":5},{\"value\":\" field in the data:\",\"paraId\":33,\"tocIndex\":5},{\"value\":\"{\\n  node: {\\n    palette: {\\n      type: 'value', // Specify the palette type as a continuous palette\\n      field: 'value', // Specify the numerical field in the data\\n      color: (value) => `rgb(${value * 255}, 0, 0)`, // Use an interpolator\\n    }\\n  }\\n}\\n\",\"paraId\":34,\"tocIndex\":5},{\"value\":\"createGraph(\\n  {\\n    data: {\\n      nodes: new Array(6).fill(0).map((_, i) => ({ id: `node-${i}`, data: { value: (i + 1) * 20 } })),\\n    },\\n    layout: { type: 'grid', cols: 6 },\\n    node: {\\n      palette: {\\n        type: 'value',\\n        field: 'value',\\n        color: (value) => `rgb(${value * 255}, 0, 0)`,\\n      },\\n    },\\n  },\\n  { width: 200, height: 50 },\\n);\\n\",\"paraId\":35,\"tocIndex\":5},{\"value\":\"The built-in continuous palette does not support specifying a value range. If there is a need for more complex color mapping, it can be customized within the style mapping.\",\"paraId\":36},{\"value\":\"If the built-in palette does not meet your requirements, you can customize the palette. For details, please refer to \",\"paraId\":37,\"tocIndex\":6},{\"value\":\"Custom Palette\",\"paraId\":38,\"tocIndex\":6},{\"value\":\".\",\"paraId\":37,\"tocIndex\":6},{\"value\":\"The palette generates styles based on the type of element. For nodes and combos, the color is mapped to the \",\"paraId\":39,\"tocIndex\":7},{\"value\":\"fill\",\"paraId\":39,\"tocIndex\":7},{\"value\":\" attribute; for edges, the color is mapped to the \",\"paraId\":39,\"tocIndex\":7},{\"value\":\"stroke\",\"paraId\":39,\"tocIndex\":7},{\"value\":\" attribute.\",\"paraId\":39,\"tocIndex\":7},{\"value\":\"If both a palette and a style mapping are configured, the style mapping will override the palette colors. In the following example, the color of the nodes is always red:\",\"paraId\":40,\"tocIndex\":7},{\"value\":\"{\\n  node: {\\n    style: {\\n      fill: 'red',\\n    },\\n    palette: 'spectral',\\n  }\\n}\\n\",\"paraId\":41,\"tocIndex\":7}];\n  "],"names":[],"mappings":"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"}