{"version":3,"sources":["docs/manual/core-concept/state.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/manual/core-concept/state.en.md?watch=parent';\n  export const texts = [{\"value\":\"Status (State) refers to the condition of an \",\"paraId\":0,\"tocIndex\":0},{\"value\":\"element\",\"paraId\":0,\"tocIndex\":0},{\"value\":\", such as \",\"paraId\":0,\"tocIndex\":0},{\"value\":\"selected\",\"paraId\":0,\"tocIndex\":0},{\"value\":\", \",\"paraId\":0,\"tocIndex\":0},{\"value\":\"hovered\",\"paraId\":0,\"tocIndex\":0},{\"value\":\", \",\"paraId\":0,\"tocIndex\":0},{\"value\":\"active\",\"paraId\":0,\"tocIndex\":0},{\"value\":\", etc. States allow elements to display different styles in different conditions, helping users to more intuitively understand the information in the graph.\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"In G6, the types of states are represented as an array of strings (\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"string[]\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"), meaning that an element can be in multiple states at the same time. For example, a node can be in both the \",\"paraId\":1,\"tocIndex\":1},{\"value\":\"selected\",\"paraId\":1,\"tocIndex\":1},{\"value\":\" and \",\"paraId\":1,\"tocIndex\":1},{\"value\":\"hovered\",\"paraId\":1,\"tocIndex\":1},{\"value\":\" states.\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"The predefined states in G6 include:\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"selected\",\"paraId\":3,\"tocIndex\":1},{\"value\":\": Selected state\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"active\",\"paraId\":3,\"tocIndex\":1},{\"value\":\": Active state\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"highlight\",\"paraId\":3,\"tocIndex\":1},{\"value\":\": Highlighted state\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"inactive\",\"paraId\":3,\"tocIndex\":1},{\"value\":\": Inactive state\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"disable\",\"paraId\":3,\"tocIndex\":1},{\"value\":\": Disabled state\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Default State\",\"paraId\":4},{\"value\":\" is the initial state of an element. When an element has no states, it is in the default state.\",\"paraId\":4},{\"value\":\"The preset states are not mandatory; they are merely common types of states. Users can define more state types according to their own needs.\",\"paraId\":4},{\"value\":\"Currently, G6 supports configuring state styles within style mappings, for example:\",\"paraId\":5,\"tocIndex\":3},{\"value\":\"{\\n  node: {\\n    style: {/** Default State Style */},\\n    state: {\\n      selected: {/** Selected State Style */},\\n      [State name]: {/** State Style */}\\n    }\\n  },\\n  edge: {\\n    style: {/** Default State Style */},\\n    state: {\\n      selected: {/** Selected State Style */},\\n      [State name]: {/** State Style */}\\n    }\\n  },\\n  combo: {\\n    style: {/** Default State Style */},\\n    state: {\\n      selected: {/** Selected State Style */},\\n      [State name]: {/** State Style */}\\n    }\\n  }\\n}\\n\",\"paraId\":6,\"tocIndex\":3},{\"value\":\"Before rendering, you can configure the state of elements in the data:\",\"paraId\":7,\"tocIndex\":4},{\"value\":\"const data = {\\n  nodes: [\\n    {\\n      id: 'node-1',\\n      states: ['selected'],\\n    },\\n    {\\n      id: 'node-2',\\n      states: ['disabled'],\\n    },\\n  ],\\n  edges: [\\n    {\\n      source: 'node-1',\\n      target: 'node-2',\\n      states: ['highlight'],\\n    },\\n  ],\\n};\\n\",\"paraId\":8,\"tocIndex\":4},{\"value\":\"Or, after rendering, you can toggle the state of elements through the API:\",\"paraId\":9,\"tocIndex\":4},{\"value\":\"// Set node 'node-1' to the selected state\\ngraph.setElementState('node-1', 'selected');\\n\\n// Set node 'node-2' to both the selected and disabled states\\ngraph.setElementState('node-2', ['selected', 'disabled']);\\n\\n// Set both 'node-1' and 'node-2' to the highlighted state\\ngraph.setElementState({\\n  'node-1': ['highlight'],\\n  'node-2': ['highlight'],\\n});\\n\",\"paraId\":10,\"tocIndex\":4},{\"value\":\"G6 provides multiple APIs for retrieving states, or for determining whether an element is in a certain state:\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"// Retrieve all states of 'node-1'.\\ngraph.getElementState('node-1');\\n\",\"paraId\":12,\"tocIndex\":5},{\"value\":\"When an element is only in the \",\"paraId\":13,\"tocIndex\":5},{\"value\":\"default state\",\"paraId\":13,\"tocIndex\":5},{\"value\":\", the \",\"paraId\":13,\"tocIndex\":5},{\"value\":\"getElementState\",\"paraId\":13,\"tocIndex\":5},{\"value\":\" method returns an empty array \",\"paraId\":13,\"tocIndex\":5},{\"value\":\"[]\",\"paraId\":13,\"tocIndex\":5},{\"value\":\".\",\"paraId\":13,\"tocIndex\":5},{\"value\":\"// Retrieve all selected nodes.\\ngraph.getElementDataByState('node', 'selected');\\n\",\"paraId\":14,\"tocIndex\":5},{\"value\":\"To remove the state of an element, you can also use the \",\"paraId\":15,\"tocIndex\":6},{\"value\":\"setElementState\",\"paraId\":15,\"tocIndex\":6},{\"value\":\" method to achieve this:\",\"paraId\":15,\"tocIndex\":6},{\"value\":\"// Remove all states from `node-1` (restore to the default state)\\ngraph.setElementState('node-1', []);\\n\",\"paraId\":16,\"tocIndex\":6},{\"value\":\"When an element is in multiple states, the priority of the states is determined by the order of the state values. For example, if a node's state value is: \",\"paraId\":17,\"tocIndex\":7},{\"value\":\"['selected', 'highlight']\",\"paraId\":17,\"tocIndex\":7},{\"value\":\", then the final state style will be:\",\"paraId\":17,\"tocIndex\":7},{\"value\":\"Final style = Default state style + Selected state style + Highlight state style\",\"paraId\":18,\"tocIndex\":7},{\"value\":\"The style of the latter state will override the style of the former state.\",\"paraId\":19,\"tocIndex\":7},{\"value\":\"To customize states, simply add them to the style mapping, for example:\",\"paraId\":20,\"tocIndex\":8},{\"value\":\"{\\n  node: {\\n    // Custom state name: 'custom-state'\\n    state: {\\n       'custom-state': {/** Custom State Style */}\\n    }\\n  },\\n}\\n\",\"paraId\":21,\"tocIndex\":8},{\"value\":\"Toggle State:\",\"paraId\":22,\"tocIndex\":8},{\"value\":\"graph.setElementState('node-1', 'custom-state');\\n\",\"paraId\":23,\"tocIndex\":8}];\n  "],"names":[],"mappings":"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"}