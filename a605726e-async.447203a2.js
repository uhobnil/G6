(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["a605726e"],{a605726e:function(e,n,t){"use strict";t.d(n,"__esModule",{value:!0}),t.d(n,"texts",{enumerable:!0,get:function(){return a;}}),t("e15df484");let a=[{value:"createGraph(\n  {\n    autoFit: 'center',\n    data: { nodes: [{ id: 'node1', style: { size: 40, fill: '#7e3feb' } }] },\n    node: { type: 'hexagon' },\n    plugins: [{ type: 'grid-line', size: 30 }],\n  },\n  { width: 600, height: 220 },\n  (gui, graph) => {\n    gui.add({ type: 'hexagon' }, 'type').disable();\n\n    const options = {\n      size: 40,\n      outerR: 0,\n    };\n    const optionFolder = gui.addFolder('hexagon.style');\n    optionFolder.add(options, 'size', 0, 100, 1);\n    optionFolder.add(options, 'outerR', 0, 100);\n\n    optionFolder.onChange(({ property, value }) => {\n      graph.updateNodeData([{ id: 'node1', style: { [property]: value } }]);\n      graph.render();\n    });\n  },\n);\n",paraId:0},{value:"If the element has its specific properties, we will list them below. For all generic style attributes, see",paraId:1},{value:"BaseNode",paraId:2},{value:"number",paraId:3,tocIndex:0},{value:"outer radius, default is half of the minimum value of width and height",paraId:4,tocIndex:0}];}}]);
//# sourceMappingURL=a605726e-async.447203a2.js.map