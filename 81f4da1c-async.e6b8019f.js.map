{"version":3,"sources":["docs/api/elements/nodes/Rect.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/elements/nodes/Rect.en.md?watch=parent';\n  export const texts = [{\"value\":\"createGraph(\\n  {\\n    autoFit: 'center',\\n    data: { nodes: [{ id: 'node1', style: { size: 40, fill: '#7e3feb' } }] },\\n    node: { type: 'rect' },\\n    plugins: [{ type: 'grid-line', size: 30 }],\\n  },\\n  { width: 600, height: 220 },\\n  (gui, graph) => {\\n    gui.add({ type: 'rect' }, 'type').disable();\\n\\n    const options = { 'size[0]': 48, 'size[1]': 24 };\\n\\n    const optionFolder = gui.addFolder('rect.style');\\n    optionFolder.add(options, 'size[0]', 0, 100, 1);\\n    optionFolder.add(options, 'size[1]', 0, 100, 1);\\n\\n    optionFolder.onChange(({ object }) => {\\n      graph.updateNodeData([{ id: 'node1', style: { size: [object['size[0]'], object['size[1]']] } }]);\\n      graph.render();\\n    });\\n  },\\n);\\n\",\"paraId\":0},{\"value\":\"If the element has its specific properties, we will list them below. For all generic style attributes, see\",\"paraId\":1},{\"value\":\"BaseNode\",\"paraId\":2}];\n  "],"names":[],"mappings":"+PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,wtBAAwtB,OAAS,CAAC,EAAE,CAAC,MAAQ,6GAA6G,OAAS,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,CAAC,EAAE"}