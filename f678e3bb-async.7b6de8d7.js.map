{"version":3,"sources":["docs/api/behaviors/CreateEdge.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/behaviors/CreateEdge.en.md?watch=parent';\n  export const texts = [{\"value\":\" Create edges by dragging or clicking nodes, and support custom edge styles.\",\"paraId\":0},{\"value\":\"createGraph(\\n  {\\n    data: {\\n      nodes: [\\n        { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\\n        { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\\n        { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\\n      ],\\n      edges: [],\\n      combos: [\\n        { id: 'combo1', combo: 'combo2' },\\n        { id: 'combo2', style: {} },\\n      ],\\n    },\\n    node: { style: { fill: '#873bf4' } },\\n    edge: { style: { stroke: '#8b9baf' } },\\n    behaviors: [\\n      {\\n        type: 'create-edge',\\n        key: 'create-edge',\\n      },\\n    ],\\n    plugins: [{ type: 'grid-line', size: 30 }],\\n    animation: true,\\n  },\\n  { width: 600, height: 400 },\\n  (gui, graph) => {\\n    const options = {\\n      key: 'create-edge',\\n      type: 'create-edge',\\n      animation: true,\\n      enable: true,\\n      trigger: 'drag',\\n    };\\n    const optionFolder = gui.addFolder('CollapseExpand Options');\\n    optionFolder.add(options, 'type').disable(true);\\n    optionFolder.add(options, 'animation');\\n    optionFolder.add(options, 'enable');\\n    optionFolder.add(options, 'trigger', ['drag', 'click']);\\n\\n    optionFolder.onChange(({ property, value }) => {\\n      graph.updateBehavior({\\n        key: 'create-edge',\\n        [property]: value,\\n      });\\n      graph.render();\\n    });\\n  },\\n);\\n\",\"paraId\":1},{\"value\":\"string\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"Behavior key, that is, the unique identifier\",\"paraId\":3,\"tocIndex\":1},{\"value\":\" Used to identify the behavior for further operations\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"// Update behavior options\\r\\ngraph.updateBehavior({key: 'key', ...});\\n\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"Required\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"string\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"Behavior type\",\"paraId\":8,\"tocIndex\":2},{\"value\":\"boolean | ((event:\",\"paraId\":9,\"tocIndex\":3},{\"value\":\" \",\"paraId\":9,\"tocIndex\":3},{\"value\":\"IPointerEvent\",\"paraId\":10,\"tocIndex\":3},{\"value\":\") => boolean)\",\"paraId\":9,\"tocIndex\":3},{\"value\":\" \",\"paraId\":9,\"tocIndex\":3},{\"value\":\"Default:\",\"paraId\":9,\"tocIndex\":3},{\"value\":\" \",\"paraId\":9,\"tocIndex\":3},{\"value\":\"true\",\"paraId\":9,\"tocIndex\":3},{\"value\":\"Whether to enable the function of creating edges\",\"paraId\":11,\"tocIndex\":3},{\"value\":\"(edge:\",\"paraId\":12,\"tocIndex\":4},{\"value\":\" \",\"paraId\":12,\"tocIndex\":4},{\"value\":\"EdgeData\",\"paraId\":13,\"tocIndex\":4},{\"value\":\") =>\",\"paraId\":12,\"tocIndex\":4},{\"value\":\" \",\"paraId\":12,\"tocIndex\":4},{\"value\":\"EdgeData\",\"paraId\":14,\"tocIndex\":4},{\"value\":\"Callback when create edge, return EdgeData.\",\"paraId\":15,\"tocIndex\":4},{\"value\":\"(edge:\",\"paraId\":16,\"tocIndex\":5},{\"value\":\" \",\"paraId\":16,\"tocIndex\":5},{\"value\":\"EdgeData\",\"paraId\":17,\"tocIndex\":5},{\"value\":\") => void\",\"paraId\":16,\"tocIndex\":5},{\"value\":\"Callback when create is completed.\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"EdgeStyle\",\"paraId\":19,\"tocIndex\":6},{\"value\":\"Style configs of the new edge\",\"paraId\":20,\"tocIndex\":6},{\"value\":\"'click' | 'drag'\",\"paraId\":21,\"tocIndex\":7},{\"value\":\" \",\"paraId\":21,\"tocIndex\":7},{\"value\":\"Default:\",\"paraId\":21,\"tocIndex\":7},{\"value\":\" \",\"paraId\":21,\"tocIndex\":7},{\"value\":\"'drag'\",\"paraId\":21,\"tocIndex\":7},{\"value\":\"trigger click or drag.\",\"paraId\":22,\"tocIndex\":7},{\"value\":\"destroy(): void;\\n\",\"paraId\":23,\"tocIndex\":9}];\n  "],"names":[],"mappings":"6PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,+EAA+E,OAAS,CAAC,EAAE,CAAC,MAAQ,q0CAAq0C,OAAS,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+CAA+C,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wDAAwD,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2EAA2E,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gBAAgB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,qBAAqB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,gBAAgB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,gBAAgB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mDAAmD,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,8CAA8C,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,YAAY,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,qCAAqC,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,YAAY,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,gCAAgC,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mBAAmB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,yBAAyB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,qBAAqB,OAAS,GAAG,SAAW,CAAC,EAAE"}