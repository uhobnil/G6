{"version":3,"sources":["docs/api/layouts/ComboCombinedLayout.zh.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/layouts/ComboCombinedLayout.zh.md?watch=parent';\n  export const texts = [{\"value\":\"PointTuple\",\"paraId\":0,\"tocIndex\":1},{\"value\":\"布局的中心、默认为图的中心\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"((d?: unknown) => number) | number | number[] | undefined\",\"paraId\":2,\"tocIndex\":2},{\"value\":\" \",\"paraId\":2,\"tocIndex\":2},{\"value\":\"Default:\",\"paraId\":2,\"tocIndex\":2},{\"value\":\" \",\"paraId\":2,\"tocIndex\":2},{\"value\":\"10\",\"paraId\":2,\"tocIndex\":2},{\"value\":\"Combo 内部的 padding 值，不用于渲染，仅用于计算力。推荐设置为与视图上 combo 内部 padding 值相同的值\",\"paraId\":3,\"tocIndex\":2},{\"value\":\"Layout\",\"paraId\":4,\"tocIndex\":3},{\"value\":\"<any>\",\"paraId\":4,\"tocIndex\":3},{\"value\":\" \",\"paraId\":4,\"tocIndex\":3},{\"value\":\"Default:\",\"paraId\":4,\"tocIndex\":3},{\"value\":\" \",\"paraId\":4,\"tocIndex\":3},{\"value\":\"ConcentricLayout\",\"paraId\":4,\"tocIndex\":3},{\"value\":\"combo 内部的布局算法，需要使用同步的布局算法，默认为 concentric\",\"paraId\":5,\"tocIndex\":3},{\"value\":\"示例\",\"paraId\":6,\"tocIndex\":3},{\"value\":\"import { ConcentricLayout } from \\\"@antv/layout\\\";\\r\\n\\r\\ninnerLayout: new ConcentricLayout({\\r\\n  sortBy: \\\"id\\\",\\r\\n});\\n\",\"paraId\":7,\"tocIndex\":3},{\"value\":\"number | number[] | ((d?:\",\"paraId\":8,\"tocIndex\":4},{\"value\":\" \",\"paraId\":8,\"tocIndex\":4},{\"value\":\"Node\",\"paraId\":8,\"tocIndex\":4},{\"value\":\") => number)\",\"paraId\":8,\"tocIndex\":4},{\"value\":\" \",\"paraId\":8,\"tocIndex\":4},{\"value\":\"Default:\",\"paraId\":8,\"tocIndex\":4},{\"value\":\" \",\"paraId\":8,\"tocIndex\":4},{\"value\":\"10\",\"paraId\":8,\"tocIndex\":4},{\"value\":\"节点大小（直径）。用于碰撞检测\",\"paraId\":9,\"tocIndex\":4},{\"value\":\" 若不指定，则根据传入的节点的 size 属性计算。若即不指定，节点中也没有 size，则默认大小为 10\",\"paraId\":10,\"tocIndex\":4},{\"value\":\"Layout\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"<any>\",\"paraId\":11,\"tocIndex\":5},{\"value\":\" \",\"paraId\":11,\"tocIndex\":5},{\"value\":\"Default:\",\"paraId\":11,\"tocIndex\":5},{\"value\":\" \",\"paraId\":11,\"tocIndex\":5},{\"value\":\"ForceLayout\",\"paraId\":11,\"tocIndex\":5},{\"value\":\"最外层的布局算法，默认为 force\",\"paraId\":12,\"tocIndex\":5},{\"value\":\"示例\",\"paraId\":13,\"tocIndex\":5},{\"value\":\"import { ForceLayout } from \\\"@antv/layout\\\";\\r\\n\\r\\nouterLayout: new ForceLayout({\\r\\n  gravity: 1,\\r\\n  factor: 2,\\r\\n  linkDistance: (edge: any, source: any, target: any) => {\\r\\n    const nodeSize = ((source.size?.[0] || 30) + (target.size?.[0] || 30)) / 2;\\r\\n    return Math.min(nodeSize * 1.5, 700);\\r\\n  },\\r\\n});\\n\",\"paraId\":14,\"tocIndex\":5},{\"value\":\"number | ((d?:\",\"paraId\":15,\"tocIndex\":6},{\"value\":\" \",\"paraId\":15,\"tocIndex\":6},{\"value\":\"Node\",\"paraId\":15,\"tocIndex\":6},{\"value\":\") => number)\",\"paraId\":15,\"tocIndex\":6},{\"value\":\"preventNodeOverlap 或 preventOverlap 为 true 时生效, 防止重叠时节点/ combo 边缘间距的最小值。可以是回调函数, 为不同节点设置不同的最小间距\",\"paraId\":16,\"tocIndex\":6},{\"value\":\"string\",\"paraId\":17,\"tocIndex\":7},{\"value\":\"treeKey\",\"paraId\":18,\"tocIndex\":7},{\"value\":\"To directly assign the positions to the nodes.\",\"paraId\":19,\"tocIndex\":9},{\"value\":\"assign(graph: Graph, options?: ComboCombinedLayoutOptions): Promise<void>;\\n\",\"paraId\":20,\"tocIndex\":9},{\"value\":\"相关参数\",\"paraId\":21},{\"value\":\"参数\",\"paraId\":22,\"tocIndex\":9},{\"value\":\"类型\",\"paraId\":23,\"tocIndex\":9},{\"value\":\"描述\",\"paraId\":24,\"tocIndex\":9},{\"value\":\"graph\",\"paraId\":25,\"tocIndex\":9},{\"value\":\"Graph\",\"paraId\":26,\"tocIndex\":9},{\"value\":\"options\",\"paraId\":27,\"tocIndex\":9},{\"value\":\"ComboCombinedLayoutOptions\",\"paraId\":28,\"tocIndex\":9},{\"value\":\"返回值\",\"paraId\":29,\"tocIndex\":9},{\"value\":\"：\",\"paraId\":29,\"tocIndex\":9},{\"value\":\"类型：\",\"paraId\":30,\"tocIndex\":9},{\"value\":\"Promise<void>\",\"paraId\":30,\"tocIndex\":9},{\"value\":\"Return the positions of nodes and edges(if needed).\",\"paraId\":31,\"tocIndex\":10},{\"value\":\"execute(graph: Graph, options?: ComboCombinedLayoutOptions): Promise<LayoutMapping>;\\n\",\"paraId\":32,\"tocIndex\":10},{\"value\":\"相关参数\",\"paraId\":21},{\"value\":\"参数\",\"paraId\":33,\"tocIndex\":10},{\"value\":\"类型\",\"paraId\":34,\"tocIndex\":10},{\"value\":\"描述\",\"paraId\":35,\"tocIndex\":10},{\"value\":\"graph\",\"paraId\":36,\"tocIndex\":10},{\"value\":\"Graph\",\"paraId\":37,\"tocIndex\":10},{\"value\":\"options\",\"paraId\":38,\"tocIndex\":10},{\"value\":\"ComboCombinedLayoutOptions\",\"paraId\":39,\"tocIndex\":10},{\"value\":\"返回值\",\"paraId\":40,\"tocIndex\":10},{\"value\":\"：\",\"paraId\":40,\"tocIndex\":10},{\"value\":\"类型：\",\"paraId\":41,\"tocIndex\":10},{\"value\":\"Promise<LayoutMapping>\",\"paraId\":41,\"tocIndex\":10}];\n  "],"names":[],"mappings":"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"}