(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["7e2cd33a"],{"7e2cd33a":function(e,a,t){"use strict";t.d(a,"__esModule",{value:!0}),t.d(a,"texts",{enumerable:!0,get:function(){return o;}}),t("77655a71");let o=[{value:"@antv/g6",paraId:0},{value:" > ",paraId:1},{value:"Prefix",paraId:2},{value:"export type Prefix<P extends string, T extends object> = {\r\n  [K in keyof T as K extends string ? PrefixKey<P, K> : never]?: T[K];\r\n};\n",paraId:3,tocIndex:0},{value:"References:",paraId:4,tocIndex:0},{value:" ",paraId:4,tocIndex:0},{value:"PrefixKey",paraId:5,tocIndex:0},{value:" ",paraId:6,tocIndex:0},{value:"Prefix<P, T>",paraId:6,tocIndex:0},{value:" is a type pattern used to apply a specific prefix ",paraId:6,tocIndex:0},{value:"P",paraId:6,tocIndex:0},{value:" to the type ",paraId:6,tocIndex:0},{value:"T",paraId:6,tocIndex:0},{value:". In our configuration, this means adding a prefix to a set of properties or behaviors to indicate that they belong to a specific context or category.",paraId:6,tocIndex:0},{value:" When you see expressions like ",paraId:7,tocIndex:0},{value:"Prefix<'label', StyleProps>",paraId:7,tocIndex:0},{value:" in the document, it means adding the ",paraId:7,tocIndex:0},{value:"label",paraId:7,tocIndex:0},{value:" prefix to the properties of the ",paraId:7,tocIndex:0},{value:"StyleProps",paraId:7,tocIndex:0},{value:" type to form a new property name. For example, the ",paraId:7,tocIndex:0},{value:"color",paraId:7,tocIndex:0},{value:" property will be used in the form of ",paraId:7,tocIndex:0},{value:"labelColor",paraId:7,tocIndex:0},{value:".",paraId:7,tocIndex:0}];}}]);
//# sourceMappingURL=7e2cd33a-async.0d60b37d.js.map