{"version":3,"sources":["docs/manual/custom-extension/animation.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/manual/custom-extension/animation.en.md?watch=parent';\n  export const texts = [{\"value\":\"For circular node (Circle) elements, the main shape is a circle. Now, let's create an animation for it so that when the size of the node changes, it transitions with a scaling animation:\",\"paraId\":0,\"tocIndex\":1},{\"value\":\"[\\n  {\\n    fields: ['r'],\\n    shape: 'key',\\n  },\\n];\\n\",\"paraId\":1,\"tocIndex\":1},{\"value\":\"Now let's create a graph instance and update the element size to trigger the update animation:\",\"paraId\":2,\"tocIndex\":1},{\"value\":\"const graph = new Graph({\\n  container: 'container',\\n  width: 50,\\n  height: 50,\\n  data: {\\n    nodes: [{ id: 'node-1', style: { x: 25, y: 25, size: 20 } }],\\n  },\\n  node: {\\n    animation: {\\n      update: [{ fields: ['r'], shape: 'key' }],\\n    },\\n  },\\n});\\n\\ngraph.draw().then(() => {\\n  graph.updateNodeData([{ id: 'node-1', style: { size: 40 } }]);\\n  graph.draw();\\n});\\n\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"⬇️ Move the pointer to the graph below and click the play button on the left to replay\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"(() => {\\n  const container = createContainer({ width: 50, height: 50 });\\n\\n  const graph = new window.g6.Graph({\\n    width: 50,\\n    height: 50,\\n    container,\\n    data: {\\n      nodes: [{ id: 'node-1', style: { x: 25, y: 25, size: 20 } }],\\n    },\\n    node: {\\n      animation: {\\n        update: [\\n          {\\n            fields: ['r'],\\n            shape: 'key',\\n          },\\n        ],\\n      },\\n    },\\n  });\\n\\n  graph.draw().then(() => {\\n    graph.updateNodeData([{ id: 'node-1', style: { size: 40 } }]);\\n    graph.draw();\\n  });\\n\\n  return container;\\n})();\\n\",\"paraId\":5,\"tocIndex\":1},{\"value\":\"When animating an element, the element converts its animation frame parameters into animation frame parameters for its individual sub-graphics and executes the corresponding animations.\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"In the example above, by updating the node size, an animation was performed on the node, and its animation frame parameters were:\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"[{ \\\"size\\\": 20 }, { \\\"size\\\": 40 }]\\n\",\"paraId\":8,\"tocIndex\":2},{\"value\":\"After obtaining the attribute, the node element converts it into animation frame parameters for the main shape (circle):\",\"paraId\":9,\"tocIndex\":2},{\"value\":\"[{ \\\"r\\\": 10 }, { \\\"r\\\": 20 }]\\n\",\"paraId\":10,\"tocIndex\":2},{\"value\":\"Therefore, what is ultimately happening here is that a transition animation is being performed on the circle, changing its radius from 10 to 20.\",\"paraId\":11,\"tocIndex\":2},{\"value\":\"By directly combining the position change animation with the size change animation into a single animation paradigm, you can obtain a composite animation paradigm:\",\"paraId\":12,\"tocIndex\":3},{\"value\":\"[\\n  {\\n    fields: ['x', 'y'],\\n  },\\n  {\\n    fields: ['r'],\\n    shape: 'key',\\n  },\\n];\\n\",\"paraId\":13,\"tocIndex\":3},{\"value\":\"And update both the position and size of the node simultaneously:\",\"paraId\":14,\"tocIndex\":3},{\"value\":\"graph.updateNodeData([{ id: 'node-1', style: { x: 175, size: 40 } }]);\\ngraph.draw();\\n\",\"paraId\":15,\"tocIndex\":3},{\"value\":\"⬇️ Move the pointer to the graph below and click the play button on the left to replay\",\"paraId\":16,\"tocIndex\":3},{\"value\":\"(() => {\\n  const container = createContainer({ width: 200, height: 50 });\\n\\n  const graph = new window.g6.Graph({\\n    width: 200,\\n    height: 50,\\n    container,\\n    data: {\\n      nodes: [{ id: 'node-1', style: { x: 25, y: 25, size: 20 } }],\\n    },\\n    node: {\\n      animation: {\\n        update: [\\n          {\\n            fields: ['x', 'y'],\\n          },\\n          { fields: ['r'], shape: 'key' },\\n        ],\\n      },\\n    },\\n  });\\n\\n  graph.draw().then(() => {\\n    graph.updateNodeData([{ id: 'node-1', style: { x: 175, size: 40 } }]);\\n    graph.draw();\\n  });\\n\\n  return container;\\n})();\\n\",\"paraId\":17,\"tocIndex\":3},{\"value\":\"Add color transition:\",\"paraId\":18,\"tocIndex\":3},{\"value\":\"[\\n  {\\n    fields: ['x', 'y'],\\n  },\\n  {\\n    fields: ['r', 'fill'],\\n    shape: 'key',\\n  },\\n];\\n\",\"paraId\":19,\"tocIndex\":3},{\"value\":\"Execute node update:\",\"paraId\":20,\"tocIndex\":3},{\"value\":\"graph.updateNodeData([{ id: 'node-1', style: { x: 175, size: 40, fill: 'pink' } }]);\\ngraph.draw();\\n\",\"paraId\":21,\"tocIndex\":3},{\"value\":\"⬇️ Move the pointer to the graph below and click the play button on the left to replay\",\"paraId\":22,\"tocIndex\":3},{\"value\":\"(() => {\\n  const container = createContainer({ width: 200, height: 50 });\\n\\n  const graph = new window.g6.Graph({\\n    width: 200,\\n    height: 50,\\n    container,\\n    data: {\\n      nodes: [{ id: 'node-1', style: { x: 25, y: 25, size: 20 } }],\\n    },\\n    node: {\\n      animation: {\\n        update: [\\n          {\\n            fields: ['x', 'y'],\\n          },\\n          { fields: ['r', 'fill'], shape: 'key' },\\n        ],\\n      },\\n    },\\n  });\\n\\n  graph.draw().then(() => {\\n    graph.updateNodeData([{ id: 'node-1', style: { x: 175, size: 40, fill: 'pink' } }]);\\n    graph.draw();\\n  });\\n\\n  return container;\\n})();\\n\",\"paraId\":23,\"tocIndex\":3}];\n  "],"names":[],"mappings":"6PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,6LAA6L,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4DAA4D,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,iGAAiG,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,iYAAiY,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,mGAAyF,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wkBAAwkB,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4LAA4L,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oIAAoI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,qCAAyC,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,2HAA2H,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,+BAAmC,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mJAAmJ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,sKAAsK,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,gGAAgG,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,oEAAoE,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,0FAA0F,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mGAAyF,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wmBAAwmB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wBAAwB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wGAAwG,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,uBAAuB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wGAAwG,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,mGAAyF,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,8nBAA8nB,OAAS,GAAG,SAAW,CAAC,EAAE"}