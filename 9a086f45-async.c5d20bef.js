(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["9a086f45"],{"9a086f45":function(n,e,t){"use strict";t.d(e,"__esModule",{value:!0}),t.d(e,"texts",{enumerable:!0,get:function(){return a;}}),t("5a7396e0");let a=[{value:"(() => {\n  const { BasePlugin, Graph, register, ExtensionCategory } = window.g6;\n\n  class RemoteDataSource extends BasePlugin {\n    constructor(context, options) {\n      super(context, options);\n      this.loadData();\n    }\n\n    async loadData() {\n      // mock remote data\n      const data = {\n        nodes: [\n          { id: 'node-1', style: { x: 25, y: 50 } },\n          { id: 'node-2', style: { x: 175, y: 50 } },\n        ],\n        edges: [{ source: 'node-1', target: 'node-2' }],\n      };\n\n      const { graph } = this.context;\n      graph.setData(data);\n      await graph.render();\n    }\n  }\n\n  register(ExtensionCategory.PLUGIN, 'remote-data-source', RemoteDataSource);\n\n  const container = window.createContainer({ width: 200, height: 100 });\n\n  const graph = new Graph({\n    container,\n    width: 200,\n    height: 100,\n    plugins: ['remote-data-source'],\n  });\n\n  graph.render();\n\n  return container;\n})();\n",paraId:0}];}}]);
//# sourceMappingURL=9a086f45-async.c5d20bef.js.map