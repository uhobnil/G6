{"version":3,"sources":["docs/manual/core-concept/data.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/manual/core-concept/data.en.md?watch=parent';\n  export const texts = [{\"value\":\"G6 is a data-driven charting library, where data is one of the most important concepts. In G6, data is the core of the chart, and both display and interaction are based on data.\",\"paraId\":0,\"tocIndex\":0},{\"value\":\"Common graph data formats include:CSV, \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"DOT\",\"paraId\":1,\"tocIndex\":0},{\"value\":\", GDF, GML, \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"GraphML\",\"paraId\":1,\"tocIndex\":0},{\"value\":\", \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"GEXF\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" etcã€‚\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"G6 uses JSON format to describe the graph structure, which includes information about nodes and edges. Here is a simple JSON data example:\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"{\\n  \\\"nodes\\\": [{ \\\"id\\\": \\\"node1\\\" }, { \\\"id\\\": \\\"node2\\\" }],\\n  \\\"edges\\\": [{ \\\"source\\\": \\\"node1\\\", \\\"target\\\": \\\"node2\\\" }]\\n}\\n\",\"paraId\":3,\"tocIndex\":0},{\"value\":\"Compared to the other formats mentioned above, the JSON format has a more intuitive and understandable data structure. It is also more flexible, allowing for easy expansion of node and edge attributes.\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"It is a data exchange format widely supported by computers, so you do not have to worry about data format compatibility issues.\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"G6 provides a series of APIs to access and manipulate data, including:\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"getData\",\"paraId\":7,\"tocIndex\":1},{\"value\":\"setData\",\"paraId\":8,\"tocIndex\":1},{\"value\":\"updateData\",\"paraId\":9,\"tocIndex\":1},{\"value\":\"getNodeData\",\"paraId\":10,\"tocIndex\":1},{\"value\":\"getEdgeData\",\"paraId\":11,\"tocIndex\":1},{\"value\":\"getComboData\",\"paraId\":12,\"tocIndex\":1},{\"value\":\"addData\",\"paraId\":13,\"tocIndex\":1},{\"value\":\"addNodeData\",\"paraId\":14,\"tocIndex\":1},{\"value\":\"addEdgeData\",\"paraId\":15,\"tocIndex\":1},{\"value\":\"addComboData\",\"paraId\":16,\"tocIndex\":1},{\"value\":\"updateData\",\"paraId\":17,\"tocIndex\":1},{\"value\":\"updateNodeData\",\"paraId\":18,\"tocIndex\":1},{\"value\":\"updateEdgeData\",\"paraId\":19,\"tocIndex\":1},{\"value\":\"updateComboData\",\"paraId\":20,\"tocIndex\":1},{\"value\":\"removeData\",\"paraId\":21,\"tocIndex\":1},{\"value\":\"removeNodeData\",\"paraId\":22,\"tocIndex\":1},{\"value\":\"removeEdgeData\",\"paraId\":23,\"tocIndex\":1},{\"value\":\"removeComboData\",\"paraId\":24,\"tocIndex\":1},{\"value\":\"Through different APIs, you can conveniently access and manipulate graph data, performing operations such as adding, deleting, modifying, and querying the graph.\",\"paraId\":25,\"tocIndex\":1},{\"value\":\"G6 does not provide functionality for data retrieval and parsing. For local JSON data, you can directly import and use it as follows:\",\"paraId\":26,\"tocIndex\":2},{\"value\":\"import data from './path/to/data.json' assert { type: 'json' };\\n\",\"paraId\":27,\"tocIndex\":2},{\"value\":\"For remote data, you can use \",\"paraId\":28,\"tocIndex\":2},{\"value\":\"fetch\",\"paraId\":28,\"tocIndex\":2},{\"value\":\" or other networking libraries to retrieve the data:\",\"paraId\":28,\"tocIndex\":2},{\"value\":\"fetch('https://path/to/data.json')\\n  .then((res) => res.json())\\n  .then((data) => {\\n    // Use data\\n  });\\n\",\"paraId\":29,\"tocIndex\":2}];\n  "],"names":[],"mappings":"6PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,oLAAoL,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,0CAA0C,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,MAAM,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,eAAe,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,KAAK,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,OAAO,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAQ,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,6IAA6I,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,oHAAwI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4MAA4M,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,kIAAkI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,yEAAyE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,eAAe,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,UAAU,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,cAAc,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,eAAe,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,iBAAiB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,iBAAiB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,kBAAkB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,iBAAiB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,iBAAiB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,kBAAkB,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,oKAAoK,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,wIAAwI,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,oEAAoE,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,gCAAgC,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,QAAQ,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,uDAAuD,OAAS,GAAG,SAAW,CAAC,EAAE,CAAC,MAAQ,kHAAkH,OAAS,GAAG,SAAW,CAAC,EAAE"}