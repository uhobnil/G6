(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["3d6a1e29"],{"3d6a1e29":function(e,a,d){"use strict";d.d(a,"__esModule",{value:!0}),d.d(a,"texts",{enumerable:!0,get:function(){return n;}}),d("b2323e9b");let n=[{value:"string",paraId:0,tocIndex:1},{value:"Behavior key, that is, the unique identifier",paraId:1,tocIndex:1},{value:" Used to identify the behavior for further operations",paraId:2,tocIndex:1},{value:"// Update behavior options\r\ngraph.updateBehavior({key: 'key', ...});\n",paraId:3,tocIndex:1},{value:"Required",paraId:4,tocIndex:1},{value:"string",paraId:5,tocIndex:2},{value:"Behavior type",paraId:6,tocIndex:2},{value:"FixShapeConfig",paraId:7,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"|",paraId:8,tocIndex:3},{value:" ",paraId:8,tocIndex:3},{value:"FixShapeConfig",paraId:9,tocIndex:3},{value:"[]",paraId:8,tocIndex:3},{value:"Combo configuration for defining which combo attributes should remain fixed in size visually. By default, the entire combo will be fixed",paraId:10,tocIndex:3},{value:"FixShapeConfig",paraId:11,tocIndex:4},{value:" ",paraId:12,tocIndex:4},{value:"|",paraId:12,tocIndex:4},{value:" ",paraId:12,tocIndex:4},{value:"FixShapeConfig",paraId:13,tocIndex:4},{value:"[]",paraId:12,tocIndex:4},{value:"Edge configuration for defining which edge attributes should remain fixed in size visually. By default, the lineWidth and labelFontSize attributes are fixed",paraId:14,tocIndex:4},{value:"boolean | ((event:",paraId:15,tocIndex:5},{value:" ",paraId:15,tocIndex:5},{value:"IViewportEvent",paraId:16,tocIndex:5},{value:") => boolean)",paraId:15,tocIndex:5},{value:" ",paraId:15,tocIndex:5},{value:"Default:",paraId:15,tocIndex:5},{value:" ``",paraId:15,tocIndex:5},{value:"Whether to enable the fix element size behavior. Enabled by default when zooming out",paraId:17,tocIndex:5},{value:"FixShapeConfig",paraId:18,tocIndex:6},{value:" ",paraId:19,tocIndex:6},{value:"|",paraId:19,tocIndex:6},{value:" ",paraId:19,tocIndex:6},{value:"FixShapeConfig",paraId:20,tocIndex:6},{value:"[]",paraId:19,tocIndex:6},{value:"Node configuration for defining which node attributes should remain fixed in size visually. If not specified (i.e., undefined), the entire node will be fixed in size.",paraId:21,tocIndex:6},{value:"Example",paraId:22,tocIndex:6},{value:" \u4F8B\u5982\uFF0C\u5728\u7F29\u653E\u8FC7\u7A0B\u4E2D\u56FA\u5B9A\u8282\u70B9\u7684 lineWidth \u5C5E\u6027\uFF0C\u53EF\u4EE5\u914D\u7F6E\u5982\u4E0B\uFF1A",paraId:23,tocIndex:6},{value:" For example, to fix ",paraId:24,tocIndex:6},{value:"lineWidth",paraId:24,tocIndex:6},{value:" attribute of a node during zooming, you can configure it as follows:",paraId:24,tocIndex:6},{value:"{\r\n node: [\r\n   {\r\n     shape: (shapes: DisplayObject[]) => shapes.find((shape) => shape.className === 'key'),\r\n     fields: ['lineWidth'],\r\n   },\r\n ],\r\n}\n",paraId:25,tocIndex:6},{value:"string",paraId:26,tocIndex:7},{value:"Specify the state of elements to be fixed in size",paraId:27,tocIndex:7},{value:"destroy(): void;\n",paraId:28,tocIndex:9}];}}]);
//# sourceMappingURL=3d6a1e29-async.4a5814d0.js.map