(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["705abb5f"],{"705abb5f":function(e,a,t){"use strict";t.d(a,"__esModule",{value:!0}),t.d(a,"texts",{enumerable:!0,get:function(){return n;}}),t("7f016273");let n=[{value:"@antv/g6",paraId:0},{value:" > ",paraId:1},{value:"ConcentricLayoutOptions",paraId:2},{value:"Concentric layout configuration",paraId:3,tocIndex:0},{value:"export interface ConcentricLayoutOptions\n",paraId:4,tocIndex:0},{value:"Property",paraId:5,tocIndex:1},{value:"Type",paraId:6,tocIndex:1},{value:"Default Value",paraId:7,tocIndex:1},{value:"Description",paraId:8,tocIndex:1},{value:"center",paraId:9,tocIndex:1},{value:"PointTuple",paraId:10,tocIndex:1},{value:"/",paraId:11,tocIndex:1},{value:"(Optional)",paraId:12,tocIndex:1},{value:" Center position of circular layout, defaults to the center position of the current container",paraId:12,tocIndex:1},{value:"clockwise",paraId:13,tocIndex:1},{value:"boolean",paraId:14,tocIndex:1},{value:"false",paraId:15,tocIndex:1},{value:"(Optional)",paraId:16,tocIndex:1},{value:" Whether to arrange in clockwise order",paraId:16,tocIndex:1},{value:"equidistant",paraId:17,tocIndex:1},{value:"boolean",paraId:18,tocIndex:1},{value:"false",paraId:19,tocIndex:1},{value:"(Optional)",paraId:20,tocIndex:1},{value:" Whether the distance between rings is equal",paraId:20,tocIndex:1},{value:"height",paraId:21,tocIndex:1},{value:"number",paraId:22,tocIndex:1},{value:"/",paraId:23,tocIndex:1},{value:"(Optional)",paraId:24,tocIndex:1},{value:" The height of the layout, defaults to the container height",paraId:24,tocIndex:1},{value:"maxLevelDiff",paraId:25,tocIndex:1},{value:"number",paraId:26,tocIndex:1},{value:"undefined",paraId:27,tocIndex:1},{value:"(Optional)",paraId:28,tocIndex:1},{value:" The sum of the concentric values of each layer",paraId:28,tocIndex:1},{value:"nodeSize",paraId:29,tocIndex:1},{value:"number | PointTuple | ((nodeData: Node) => number)",paraId:30,tocIndex:1},{value:"/",paraId:31,tocIndex:1},{value:"(Optional)",paraId:32,tocIndex:1},{value:" Node size (diameter). Used for collision detection when preventing node overlap",paraId:32,tocIndex:1},{value:"nodeSpacing",paraId:33,tocIndex:1},{value:"number | number[] | ((node?: Node) => number)",paraId:34,tocIndex:1},{value:"10",paraId:35,tocIndex:1},{value:"(Optional)",paraId:36,tocIndex:1},{value:" Minimum spacing between rings, used to adjust the radius",paraId:36,tocIndex:1},{value:"preventOverlap",paraId:37,tocIndex:1},{value:"boolean",paraId:38,tocIndex:1},{value:"false",paraId:39,tocIndex:1},{value:"(Optional)",paraId:40,tocIndex:1},{value:" Whether to prevent overlap",paraId:40,tocIndex:1},{value:"sortBy",paraId:41,tocIndex:1},{value:"string",paraId:42,tocIndex:1},{value:"undefined",paraId:43,tocIndex:1},{value:"(Optional)",paraId:44,tocIndex:1},{value:" Specify the basis for sorting (node attribute name)",paraId:44,tocIndex:1},{value:"startAngle",paraId:45,tocIndex:1},{value:"number",paraId:46,tocIndex:1},{value:"3 / 2 * Math.PI",paraId:47,tocIndex:1},{value:"(Optional)",paraId:48,tocIndex:1},{value:" The starting angle of the layout node",paraId:48,tocIndex:1},{value:"sweep",paraId:49,tocIndex:1},{value:"number",paraId:50,tocIndex:1},{value:"undefined",paraId:51,tocIndex:1},{value:"(Optional)",paraId:52,tocIndex:1},{value:" The difference in radians between the first and last nodes",paraId:52,tocIndex:1},{value:"width",paraId:53,tocIndex:1},{value:"number",paraId:54,tocIndex:1},{value:"/",paraId:55,tocIndex:1},{value:"(Optional)",paraId:56,tocIndex:1},{value:" The width of the layout, defaults to the container width",paraId:56,tocIndex:1}];}}]);
//# sourceMappingURL=705abb5f-async.b5dfea79.js.map