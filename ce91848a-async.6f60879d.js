(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["ce91848a"],{ce91848a:function(e,a,t){"use strict";t.d(a,"__esModule",{value:!0}),t.d(a,"texts",{enumerable:!0,get:function(){return d;}}),t("558c9294");let d=[{value:"@antv/g6",paraId:0},{value:" > ",paraId:1},{value:"BaseEdgeStyleProps",paraId:2},{value:"Base style properties of the edge",paraId:3,tocIndex:0},{value:"export interface BaseEdgeStyleProps extends BaseElementStyleProps, Prefix<'label', EdgeLabelStyleProps>, Prefix<'halo', PathStyleProps>, Prefix<'badge', EdgeBadgeStyleProps>, Prefix<'startArrow', EdgeArrowStyleProps>, Prefix<'endArrow', EdgeArrowStyleProps>, Prefix<'loop', LoopStyleProps>\n",paraId:4,tocIndex:0},{value:"Extends:",paraId:5,tocIndex:0},{value:" ",paraId:5,tocIndex:0},{value:"BaseElementStyleProps",paraId:6,tocIndex:0},{value:", ",paraId:5,tocIndex:0},{value:"Prefix",paraId:7,tocIndex:0},{value:"<'label', ",paraId:5,tocIndex:0},{value:"EdgeLabelStyleProps",paraId:8,tocIndex:0},{value:">, ",paraId:5,tocIndex:0},{value:"Prefix",paraId:9,tocIndex:0},{value:"<'halo', PathStyleProps>, ",paraId:5,tocIndex:0},{value:"Prefix",paraId:10,tocIndex:0},{value:"<'badge', EdgeBadgeStyleProps>, ",paraId:5,tocIndex:0},{value:"Prefix",paraId:11,tocIndex:0},{value:"<'startArrow', ",paraId:5,tocIndex:0},{value:"EdgeArrowStyleProps",paraId:12,tocIndex:0},{value:">, ",paraId:5,tocIndex:0},{value:"Prefix",paraId:13,tocIndex:0},{value:"<'endArrow', ",paraId:5,tocIndex:0},{value:"EdgeArrowStyleProps",paraId:14,tocIndex:0},{value:">, ",paraId:5,tocIndex:0},{value:"Prefix",paraId:15,tocIndex:0},{value:"<'loop', ",paraId:5,tocIndex:0},{value:"LoopStyleProps",paraId:16,tocIndex:0},{value:">",paraId:5,tocIndex:0},{value:"Property",paraId:17,tocIndex:1},{value:"Type",paraId:18,tocIndex:1},{value:"Default Value",paraId:19,tocIndex:1},{value:"Description",paraId:20,tocIndex:1},{value:"badge",paraId:21,tocIndex:1},{value:"boolean",paraId:22,tocIndex:1},{value:"true",paraId:23,tocIndex:1},{value:"(Optional)",paraId:24,tocIndex:1},{value:" Whether to display the badge of the edge",paraId:24,tocIndex:1},{value:"endArrow",paraId:25,tocIndex:1},{value:"boolean",paraId:26,tocIndex:1},{value:"false",paraId:27,tocIndex:1},{value:"(Optional)",paraId:28,tocIndex:1},{value:" Whether to display the end arrow of the edge",paraId:28,tocIndex:1},{value:"endArrowOffset",paraId:29,tocIndex:1},{value:"number",paraId:30,tocIndex:1},{value:"/",paraId:31,tocIndex:1},{value:"(Optional)",paraId:32,tocIndex:1},{value:" Offset of the end arrow",paraId:32,tocIndex:1},{value:"halo",paraId:33,tocIndex:1},{value:"boolean",paraId:34,tocIndex:1},{value:"false",paraId:35,tocIndex:1},{value:"(Optional)",paraId:36,tocIndex:1},{value:" Whether to display the halo of the edge",paraId:36,tocIndex:1},{value:"isBillboard",paraId:37,tocIndex:1},{value:"boolean",paraId:38,tocIndex:1},{value:"true",paraId:39,tocIndex:1},{value:"(Optional)",paraId:40,tocIndex:1},{value:" Effective in 3D scenes, always facing the screen, so the line width is not affected by the perspective projection image",paraId:40,tocIndex:1},{value:"label",paraId:41,tocIndex:1},{value:"boolean",paraId:42,tocIndex:1},{value:"true",paraId:43,tocIndex:1},{value:"(Optional)",paraId:44,tocIndex:1},{value:" Whether to display the label of the edge",paraId:44,tocIndex:1},{value:"loop",paraId:45,tocIndex:1},{value:"boolean",paraId:46,tocIndex:1},{value:"true",paraId:47,tocIndex:1},{value:"(Optional)",paraId:48,tocIndex:1},{value:" Whether to enable self-loop edge",paraId:48,tocIndex:1},{value:"markerEnd",paraId:49,tocIndex:1},{value:"DisplayObject | null",paraId:50,tocIndex:1},{value:"/",paraId:51,tocIndex:1},{value:"(Optional)",paraId:52,tocIndex:1},{value:' Add a marker graphic at the "end point", where the "end point" is the intersection of the edge and the target node',paraId:52,tocIndex:1},{value:"markerEndOffset",paraId:53,tocIndex:1},{value:"number",paraId:54,tocIndex:1},{value:"0",paraId:55,tocIndex:1},{value:"(Optional)",paraId:56,tocIndex:1},{value:' Adjust the position of the marker graphic at the "end point", positive offset inward, negative offset outward',paraId:56,tocIndex:1},{value:"markerMid",paraId:57,tocIndex:1},{value:"DisplayObject | null",paraId:58,tocIndex:1},{value:"/",paraId:59,tocIndex:1},{value:"(Optional)",paraId:60,tocIndex:1},{value:' Place a marker graphic on each vertex of the path except for the "start point" and "end point". In the internal implementation, because we will convert some commands in the path to C commands, these controlPoints are actually the control points of the cubic Bezier curve',paraId:60,tocIndex:1},{value:"markerStart",paraId:61,tocIndex:1},{value:"DisplayObject | null",paraId:62,tocIndex:1},{value:"/",paraId:63,tocIndex:1},{value:"(Optional)",paraId:64,tocIndex:1},{value:' Add a marker graphic at the "start point", where the "start point" is the intersection of the edge and the source node',paraId:64,tocIndex:1},{value:"markerStartOffset",paraId:65,tocIndex:1},{value:"number",paraId:66,tocIndex:1},{value:"0",paraId:67,tocIndex:1},{value:"(Optional)",paraId:68,tocIndex:1},{value:' Adjust the position of the marker graphic at the "start point", positive offset inward, negative offset outward',paraId:68,tocIndex:1},{value:"sourceNode",paraId:69,tocIndex:1},{value:"ID",paraId:70,tocIndex:1},{value:"/",paraId:71,tocIndex:1},{value:"The ID of the source node",paraId:72,tocIndex:1},{value:"sourcePort",paraId:73,tocIndex:1},{value:"string",paraId:74,tocIndex:1},{value:"/",paraId:75,tocIndex:1},{value:"(Optional)",paraId:76,tocIndex:1},{value:" The Port of the source node",paraId:76,tocIndex:1},{value:"startArrow",paraId:77,tocIndex:1},{value:"boolean",paraId:78,tocIndex:1},{value:"false",paraId:79,tocIndex:1},{value:"(Optional)",paraId:80,tocIndex:1},{value:" Whether to display the start arrow of the edge",paraId:80,tocIndex:1},{value:"startArrowOffset",paraId:81,tocIndex:1},{value:"number",paraId:82,tocIndex:1},{value:"/",paraId:83,tocIndex:1},{value:"(Optional)",paraId:84,tocIndex:1},{value:" Offset of the start arrow",paraId:84,tocIndex:1},{value:"targetNode",paraId:85,tocIndex:1},{value:"ID",paraId:86,tocIndex:1},{value:"/",paraId:87,tocIndex:1},{value:"The source shape. Represents the start of the edge",paraId:88,tocIndex:1},{value:"targetPort",paraId:89,tocIndex:1},{value:"string",paraId:90,tocIndex:1},{value:"/",paraId:91,tocIndex:1},{value:"(Optional)",paraId:92,tocIndex:1},{value:" The Port of the target node",paraId:92,tocIndex:1}];}}]);
//# sourceMappingURL=ce91848a-async.6f60879d.js.map