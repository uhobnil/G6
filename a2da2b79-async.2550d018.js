(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["a2da2b79"],{a2da2b79:function(n,e,a){"use strict";a.d(e,"__esModule",{value:!0}),a.d(e,"texts",{enumerable:!0,get:function(){return o;}}),a("71101adc");let o=[{value:" Support setting a background image for the canvas to make the canvas more hierarchical and narrative.",paraId:0},{value:"createGraph(\n  {\n    data: {\n      nodes: [\n        { id: 'node-0' },\n        { id: 'node-1' },\n        { id: 'node-2' },\n        { id: 'node-3' },\n        { id: 'node-4' },\n        { id: 'node-5' },\n      ],\n      edges: [\n        { source: 'node-0', target: 'node-1' },\n        { source: 'node-0', target: 'node-2' },\n        { source: 'node-0', target: 'node-3' },\n        { source: 'node-0', target: 'node-4' },\n        { source: 'node-1', target: 'node-0' },\n        { source: 'node-2', target: 'node-0' },\n        { source: 'node-3', target: 'node-0' },\n        { source: 'node-4', target: 'node-0' },\n        { source: 'node-5', target: 'node-0' },\n      ],\n    },\n    node: { style: { fill: '#7e3feb' } },\n    edge: { style: { stroke: '#8b9baf' } },\n    layout: { type: 'grid' },\n    behaviors: ['drag-canvas'],\n    plugins: [\n      {\n        type: 'background',\n        key: 'background',\n        backgroundImage:\n          'url(https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*0Qq0ToQm1rEAAAAAAAAAAAAADmJ7AQ/original)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'contain',\n      },\n    ],\n  },\n  { width: 600, height: 300 },\n  (gui, graph) => {\n    const options = {\n      type: 'background',\n      backgroundSize: 'contain',\n    };\n    const optionFolder = gui.addFolder('Background Options');\n    optionFolder.add(options, 'type').disable(true);\n    optionFolder.add(options, 'backgroundSize', ['cover', 'contain', 'auto', '50%']);\n\n    optionFolder.onChange(({ property, value }) => {\n      graph.updatePlugin({\n        key: 'background',\n        [property]: value,\n      });\n      graph.render();\n    });\n  },\n);\n",paraId:1},{value:"string",paraId:2,tocIndex:0},{value:"Plugin key, that is, the unique identifier",paraId:3,tocIndex:0},{value:" Used to identify the plugin for further operations",paraId:4,tocIndex:0},{value:"// Get plugin instance\r\nconst plugin = graph.getPluginInstance('key');\r\n// Update plugin options\r\ngraph.updatePlugin({key: 'key', ...});\n",paraId:5,tocIndex:0},{value:"Required",paraId:6,tocIndex:0},{value:"string",paraId:7,tocIndex:1},{value:"Plugin type",paraId:8,tocIndex:1}];}}]);
//# sourceMappingURL=a2da2b79-async.2550d018.js.map