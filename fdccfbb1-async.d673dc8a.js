(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["fdccfbb1"],{fdccfbb1:function(e,a,o){"use strict";o.d(a,"__esModule",{value:!0}),o.d(a,"texts",{enumerable:!0,get:function(){return n;}}),o("8bc4313e");let n=[{value:"createGraph(\n  {\n    data: {\n      nodes: [\n        { id: 'node1', combo: 'combo1', style: { x: 250, y: 150 } },\n        { id: 'node2', combo: 'combo1', style: { x: 350, y: 150 } },\n        { id: 'node3', combo: 'combo2', style: { x: 250, y: 300 } },\n      ],\n      combos: [\n        { id: 'combo1', combo: 'combo2' },\n        { id: 'combo2', style: {} },\n      ],\n    },\n    node: { style: { fill: '#7e3feb' } },\n    combo: {\n      style: {\n        labelText: (d) => d.id,\n        labelPadding: [1, 10],\n        labelFill: '#fff',\n        labelBackground: true,\n        labelBackgroundRadius: 4,\n        labelBackgroundFill: '#7e3feb',\n      },\n    },\n    behaviors: ['collapse-expand'],\n    plugins: [{ type: 'grid-line', size: 30 }],\n    animation: true,\n  },\n  { width: 600, height: 400 },\n  (gui, graph) => {\n    const options = {\n      collapsed: false,\n      collapsedSize: 32,\n      collapsedMarker: true,\n      collapsedMarkerFontSize: 12,\n      collapsedMarkerType: 'child-count',\n    };\n\n    const optionFolder = gui.addFolder('combo2.style');\n\n    optionFolder.add(options, 'collapsed');\n    optionFolder.add(options, 'collapsedSize', 0, 100, 1);\n    optionFolder.add(options, 'collapsedMarker');\n    optionFolder.add(options, 'collapsedMarkerFontSize', 12, 20, 1);\n    optionFolder.add(options, 'collapsedMarkerType', ['child-count', 'descendant-count', 'node-count']);\n\n    optionFolder.onChange(({ property, value }) => {\n      graph.updateComboData([{ id: 'combo2', style: { [property]: value } }]);\n      graph.render();\n    });\n  },\n);\n",paraId:0},{value:"NodeData | ComboData",paraId:1,tocIndex:0},{value:"[]",paraId:1,tocIndex:0},{value:"The data of the children of combo",paraId:2,tocIndex:0},{value:" If the combo is collapsed, children may be empty, and the complete child element data can be obtained through childrenData",paraId:3,tocIndex:0},{value:"string",paraId:4,tocIndex:1},{value:"[]",paraId:4,tocIndex:1},{value:"The children of combo, which can be nodes or combos",paraId:5,tocIndex:1},{value:"boolean",paraId:6,tocIndex:2},{value:"Whether to show the marker when the combo is collapsed",paraId:7,tocIndex:2},{value:"number | [number, number] | Float32Array | [number, number, number]",paraId:8,tocIndex:3},{value:"The default size of combo when collapsed",paraId:9,tocIndex:3},{value:"number | number[]",paraId:10,tocIndex:4},{value:"The padding of combo, only effective when expanded",paraId:11,tocIndex:4},{value:"number | [number, number] | Float32Array | [number, number, number]",paraId:12,tocIndex:5},{value:"The default size of combo when expanded",paraId:13,tocIndex:5},{value:"BaseStyleProps",paraId:14},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:14},{value:"TextStyleProps includes the following properties:",paraId:15,tocIndex:7},{value:"fill",paraId:16,tocIndex:7},{value:"fontSize",paraId:16,tocIndex:7},{value:"fontWeight",paraId:16,tocIndex:7},{value:"...",paraId:16,tocIndex:7},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:17,tocIndex:7},{value:"iconFill",paraId:18,tocIndex:7},{value:"iconFontSize",paraId:18,tocIndex:7},{value:"iconFontWeight",paraId:18,tocIndex:7},{value:"...",paraId:18,tocIndex:7},{value:"BaseStyleProps",paraId:14},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:14},{value:"TextStyleProps includes the following properties:",paraId:19,tocIndex:9},{value:"fill",paraId:20,tocIndex:9},{value:"fontSize",paraId:20,tocIndex:9},{value:"fontWeight",paraId:20,tocIndex:9},{value:"...",paraId:20,tocIndex:9},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:21,tocIndex:9},{value:"iconFill",paraId:22,tocIndex:9},{value:"iconFontSize",paraId:22,tocIndex:9},{value:"iconFontWeight",paraId:22,tocIndex:9},{value:"...",paraId:22,tocIndex:9},{value:"TextStyleProps",paraId:14},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:14},{value:"TextStyleProps includes the following properties:",paraId:23,tocIndex:10},{value:"fill",paraId:24,tocIndex:10},{value:"fontSize",paraId:24,tocIndex:10},{value:"fontWeight",paraId:24,tocIndex:10},{value:"...",paraId:24,tocIndex:10},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:25,tocIndex:10},{value:"iconFill",paraId:26,tocIndex:10},{value:"iconFontSize",paraId:26,tocIndex:10},{value:"iconFontWeight",paraId:26,tocIndex:10},{value:"...",paraId:26,tocIndex:10},{value:"ImageStyleProps",paraId:14},{value:"Excludes z",paraId:27,tocIndex:11},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:14},{value:"TextStyleProps includes the following properties:",paraId:28,tocIndex:11},{value:"fill",paraId:29,tocIndex:11},{value:"fontSize",paraId:29,tocIndex:11},{value:"fontWeight",paraId:29,tocIndex:11},{value:"...",paraId:29,tocIndex:11},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:30,tocIndex:11},{value:"iconFill",paraId:31,tocIndex:11},{value:"iconFontSize",paraId:31,tocIndex:11},{value:"iconFontWeight",paraId:31,tocIndex:11},{value:"...",paraId:31,tocIndex:11},{value:"'child-count' | 'descendant-count' | 'node-count' | ((children:",paraId:32,tocIndex:12},{value:" ",paraId:32,tocIndex:12},{value:"NodeData | ComboData",paraId:32,tocIndex:12},{value:"[]) => string)",paraId:32,tocIndex:12},{value:"The type of marker displayed when the combo is collapsed",paraId:33,tocIndex:12},{value:"'child-count'",paraId:34,tocIndex:12},{value:": Number of child elements (including Nodes and Combos)",paraId:34,tocIndex:12},{value:"'descendant-count'",paraId:35,tocIndex:12},{value:": Number of descendant elements (including Nodes and Combos)",paraId:35,tocIndex:12},{value:"'node-count'",paraId:36,tocIndex:12},{value:": Number of descendant elements (only Nodes)",paraId:36,tocIndex:12},{value:"(children: NodeLikeData[]) => string",paraId:37,tocIndex:12},{value:": Custom processing logic",paraId:37,tocIndex:12}];}}]);
//# sourceMappingURL=fdccfbb1-async.d673dc8a.js.map