{"version":3,"sources":["docs/api/elements/edges/CubicVertical.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/elements/edges/CubicVertical.en.md?watch=parent';\n  export const texts = [{\"value\":\" Please note that when calculating the control points, the distance on the y-axis is mainly considered, and the change on the x-axis is ignored\",\"paraId\":0},{\"value\":\"createGraph(\\n  {\\n    autoFit: 'center',\\n    data: {\\n      nodes: [{ id: 'node1' }, { id: 'node2' }, { id: 'node3' }, { id: 'node4' }, { id: 'node5' }, { id: 'node6' }],\\n      edges: [\\n        { source: 'node1', target: 'node2' },\\n        { source: 'node1', target: 'node3' },\\n        { source: 'node1', target: 'node4', text: 'cubic-vertical' },\\n        { source: 'node1', target: 'node5' },\\n        { source: 'node1', target: 'node6' },\\n      ],\\n    },\\n    node: {\\n      style: {\\n        fill: '#f8f8f8',\\n        stroke: '#8b9baf',\\n        lineWidth: 1,\\n        port: true,\\n        ports: [{ placement: 'top' }, { placement: 'bottom' }],\\n      },\\n    },\\n    edge: {\\n      type: 'cubic-vertical',\\n      style: {\\n        stroke: '#7e3feb',\\n        lineWidth: 2,\\n        labelText: (d) => d.text,\\n        labelBackground: true,\\n        labelBackgroundFill: '#f9f0ff',\\n        labelBackgroundOpacity: 1,\\n        labelBackgroundLineWidth: 2,\\n        labelBackgroundStroke: '#7e3feb',\\n        labelPadding: [1, 10],\\n        labelBackgroundRadius: 4,\\n      },\\n    },\\n    behaviors: ['drag-canvas', 'drag-element'],\\n    layout: {\\n      type: 'antv-dagre',\\n      rankdir: 'TB',\\n      nodesep: 25,\\n      ranksep: 80,\\n    },\\n    plugins: [{ type: 'grid-line', size: 30 }],\\n  },\\n  { width: 600, height: 300 },\\n  (gui, graph) => {\\n    gui.add({ type: 'cubic-vertical' }, 'type').disable();\\n\\n    const options = {\\n      curveOffset: 20,\\n      curvePosition: 0.5,\\n    };\\n    const optionFolder = gui.addFolder('cubic-vertical.style');\\n    optionFolder.add(options, 'curveOffset', 0, 100);\\n    optionFolder.add(options, 'curvePosition', 0, 1);\\n\\n    optionFolder.onChange(({ property, value }) => {\\n      graph.updateEdgeData((prev) => prev.map((edge) => ({ ...edge, style: { [property]: value } })));\\n      graph.render();\\n    });\\n  },\\n);\\n\",\"paraId\":1},{\"value\":\"If the element has its specific properties, we will list them below. For all generic style attributes, see\",\"paraId\":2},{\"value\":\"BaseEdge\",\"paraId\":3},{\"value\":\"number | [number, number]\",\"paraId\":4,\"tocIndex\":0},{\"value\":\" \",\"paraId\":4,\"tocIndex\":0},{\"value\":\"Default:\",\"paraId\":4,\"tocIndex\":0},{\"value\":\" \",\"paraId\":4,\"tocIndex\":0},{\"value\":\"[0, 0]\",\"paraId\":4,\"tocIndex\":0},{\"value\":\"The distance of the control point from the line\",\"paraId\":5,\"tocIndex\":0},{\"value\":\"number | [number, number]\",\"paraId\":6,\"tocIndex\":1},{\"value\":\" \",\"paraId\":6,\"tocIndex\":1},{\"value\":\"Default:\",\"paraId\":6,\"tocIndex\":1},{\"value\":\" \",\"paraId\":6,\"tocIndex\":1},{\"value\":\"[0.5, 0.5]\",\"paraId\":6,\"tocIndex\":1},{\"value\":\"The relative position of the control point on the line, ranging from \",\"paraId\":7,\"tocIndex\":1},{\"value\":\"0-1\",\"paraId\":7,\"tocIndex\":1}];\n  "],"names":[],"mappings":"+PAEe,6CAAA,QADN,YACA,IAAM,EAAQ,CAAC,CAAC,MAAQ,kJAAkJ,OAAS,CAAC,EAAE,CAAC,MAAQ,m2DAAm2D,OAAS,CAAC,EAAE,CAAC,MAAQ,6GAA6G,OAAS,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,CAAC,EAAE,CAAC,MAAQ,4BAA4B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,SAAS,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,kDAAkD,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,4BAA4B,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,WAAW,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,IAAI,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,aAAa,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,wEAAwE,OAAS,EAAE,SAAW,CAAC,EAAE,CAAC,MAAQ,MAAM,OAAS,EAAE,SAAW,CAAC,EAAE"}