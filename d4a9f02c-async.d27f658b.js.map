{"version":3,"sources":["docs/api/elements/nodes/BaseNode.en.md?type=text"],"sourcesContent":["\n  import '/home/runner/work/G6/G6/packages/site/docs/api/elements/nodes/BaseNode.en.md?watch=parent';\n  export const texts = [{\"value\":\"createGraph(\\n  {\\n    autoFit: 'center',\\n    data: {\\n      nodes: [\\n        {\\n          id: 'node1',\\n          style: {\\n            fill: '#7e3feb',\\n            size: 40,\\n            label: true,\\n            labelText: 'node',\\n            labelBackground: false,\\n            icon: true,\\n            iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\\n            donuts: [30, 30, 20, 20],\\n            donutPalette: ['#1783FF', '#00C9C9', '#F08F56', '#D580FF'],\\n            badge: true,\\n            badges: [{ placement: 'top-right', text: 'Important', offsetX: -4 }],\\n            port: true,\\n            ports: [{ placement: 'left' }, { placement: 'right' }],\\n            portFill: '#f9f0ff',\\n            portR: 3,\\n            portStroke: '#7e3feb',\\n          },\\n        },\\n      ],\\n    },\\n    plugins: [{ type: 'grid-line', size: 30 }],\\n  },\\n  { width: 600, height: 600 },\\n  (gui, graph) => {\\n    const global = { type: 'circle' };\\n    gui\\n      .add(global, 'type', ['circle', 'diamond', 'donut', 'ellipse', 'hexagon', 'image', 'rect', 'star', 'triangle'])\\n      .onChange((v) => {\\n        graph.updateNodeData([{ id: 'node1', type: v }]);\\n        graph.render();\\n      });\\n\\n    const options = {\\n      fill: '#7e3feb',\\n      fillOpacity: 1,\\n      lineWidth: 0,\\n      'size[0]': 40,\\n      'size[1]': 40,\\n      stroke: '#000000',\\n      strokeOpacity: 1,\\n\\n      label: true,\\n      labelFill: '000000d9',\\n      labelMaxWidth: '200%',\\n      labelPadding: 0,\\n      labelPlacement: 'bottom',\\n      labelText: 'node',\\n      labelWordWrap: false,\\n      labelOpacity: 1,\\n\\n      labelBackground: true,\\n      labelBackgroundFill: '#fff',\\n      labelBackgroundLineDash: 0,\\n      labelBackgroundLineWidth: 0,\\n      labelBackgroundOpacity: 0.5,\\n      labelBackgroundRadius: 0,\\n      labelBackgroundStroke: '#fff',\\n\\n      halo: false,\\n      haloLineDash: 0,\\n      haloLineWidth: 12,\\n      haloStrokeOpacity: 0.25,\\n\\n      icon: true,\\n      iconFill: '#fff',\\n      iconFontSize: 16,\\n      iconOpacity: 1,\\n      iconText: '',\\n      iconSrc: 'https://gw.alipayobjects.com/zos/basement_prod/012bcf4f-423b-4922-8c24-32a89f8c41ce.svg',\\n      iconWidth: 20,\\n      iconHeight: 20,\\n\\n      badge: true,\\n      badgeFill: '000000d9',\\n      badgeMaxWidth: '200%',\\n      badgeOpacity: 1,\\n      badgePadding: 0,\\n      badgePlacement: 'top-right',\\n      badgeText: 'Important',\\n      badgeWordWrap: false,\\n\\n      badgeBackground: true,\\n      badgeBackgroundFill: '#fff',\\n      badgeBackgroundLineDash: 0,\\n      badgeBackgroundLineWidth: 0,\\n      badgeBackgroundOpacity: 0.5,\\n      badgeBackgroundRadius: 0,\\n      badgeBackgroundStroke: '#fff',\\n\\n      port: true,\\n      portFill: '#f9f0ff',\\n      portR: 3,\\n      portStroke: '#7e3feb',\\n    };\\n    const optionFolder = gui.addFolder('node.style');\\n\\n    optionFolder.add(options, 'size[0]', 0, 100).name('width(size[0])');\\n    optionFolder.add(options, 'size[1]', 0, 100).name('height(size[1])');\\n    optionFolder.add(options, 'lineWidth', 0, 20);\\n    optionFolder.addColor(options, 'fill');\\n    optionFolder.add(options, 'fillOpacity', 0, 1);\\n    optionFolder.addColor(options, 'stroke');\\n    optionFolder.add(options, 'strokeOpacity', 0, 1);\\n\\n    optionFolder.add(options, 'label').onChange((v) => {\\n      [labelFill, labelMaxWidth, labelWordWrap, labelPadding, labelPlacement, labelText, labelOpacity].forEach((i) =>\\n        i.show(v),\\n      );\\n    });\\n    const labelFill = optionFolder.addColor(options, 'labelFill').hide();\\n    const labelMaxWidth = optionFolder.add(options, 'labelMaxWidth', ['200%', '20px', '80%']).hide();\\n    const labelWordWrap = optionFolder.add(options, 'labelWordWrap').hide();\\n    const labelPadding = optionFolder.add(options, 'labelPadding', 0, 20).hide();\\n    const labelPlacement = optionFolder\\n      .add(options, 'labelPlacement', [\\n        'left',\\n        'right',\\n        'top',\\n        'bottom',\\n        'left-top',\\n        'left-bottom',\\n        'right-top',\\n        'right-bottom',\\n        'top-left',\\n        'top-right',\\n        'bottom-left',\\n        'bottom-right',\\n        'center',\\n      ])\\n      .hide();\\n    const labelText = optionFolder.add(options, 'labelText').hide();\\n    const labelOpacity = optionFolder.add(options, 'labelOpacity', 0, 1).hide();\\n\\n    const labelBackground = optionFolder.add(options, 'labelBackground').onChange((v) => {\\n      [\\n        labelBackgroundFill,\\n        labelBackgroundStroke,\\n        labelBackgroundLineDash,\\n        labelBackgroundLineWidth,\\n        labelBackgroundOpacity,\\n        labelBackgroundRadius,\\n      ].forEach((i) => i.show(v));\\n    });\\n    const labelBackgroundFill = optionFolder.addColor(options, 'labelBackgroundFill').hide();\\n    const labelBackgroundStroke = optionFolder.addColor(options, 'labelBackgroundStroke').hide();\\n    const labelBackgroundLineDash = optionFolder.add(options, 'labelBackgroundLineDash', 0, 10).hide();\\n    const labelBackgroundLineWidth = optionFolder.add(options, 'labelBackgroundLineWidth', 0, 10).hide();\\n    const labelBackgroundOpacity = optionFolder.add(options, 'labelBackgroundOpacity', 0, 1).hide();\\n    const labelBackgroundRadius = optionFolder.add(options, 'labelBackgroundRadius', 0, 30).hide();\\n\\n    const halo = optionFolder.add(options, 'halo').onChange((v) => {\\n      [haloStrokeOpacity, haloLineDash, haloLineWidth].forEach((i) => i.show(v));\\n    });\\n    const haloStrokeOpacity = optionFolder.add(options, 'haloStrokeOpacity', 0, 1).hide();\\n    const haloLineDash = optionFolder.add(options, 'haloLineDash', 0, 10).hide();\\n    const haloLineWidth = optionFolder.add(options, 'haloLineWidth', 0, 10).hide();\\n\\n    const icon = optionFolder.add(options, 'icon').onChange((v) => {\\n      [iconSrc, iconText, iconFill, iconFontSize, iconOpacity, iconWidth, iconHeight].forEach((i) => i.show(v));\\n    });\\n    const iconSrc = optionFolder.add(options, 'iconSrc').hide();\\n    const iconText = optionFolder.add(options, 'iconText').hide();\\n    const iconFill = optionFolder.addColor(options, 'iconFill').hide();\\n    const iconFontSize = optionFolder.add(options, 'iconFontSize', 12, 20, 1).hide();\\n    const iconOpacity = optionFolder.add(options, 'iconOpacity', 0, 1).hide();\\n    const iconWidth = optionFolder.add(options, 'iconWidth', 0, 100, 1).hide();\\n    const iconHeight = optionFolder.add(options, 'iconHeight', 0, 100, 1).hide();\\n\\n    const badge = optionFolder.add(options, 'badge').onChange((v) => {\\n      [badgeFill, badgeMaxWidth, badgeWordWrap, badgePadding, badgePlacement, badgeText, badgeOpacity].forEach((i) =>\\n        i.show(v),\\n      );\\n    });\\n    const badgeFill = optionFolder.addColor(options, 'badgeFill').hide();\\n    const badgeMaxWidth = optionFolder.add(options, 'badgeMaxWidth', ['200%', '20px', '80%']).hide();\\n    const badgeWordWrap = optionFolder.add(options, 'badgeWordWrap').hide();\\n    const badgePadding = optionFolder.add(options, 'badgePadding', 0, 20).hide();\\n    const badgePlacement = optionFolder\\n      .add(options, 'badgePlacement', [\\n        'left',\\n        'right',\\n        'top',\\n        'bottom',\\n        'left-top',\\n        'left-bottom',\\n        'right-top',\\n        'right-bottom',\\n        'top-left',\\n        'top-right',\\n        'bottom-left',\\n        'bottom-right',\\n      ])\\n      .hide();\\n    const badgeText = optionFolder.add(options, 'badgeText').hide();\\n    const badgeOpacity = optionFolder.add(options, 'badgeOpacity', 0, 1).hide();\\n\\n    const badgeBackground = optionFolder.add(options, 'badgeBackground').onChange((v) => {\\n      [\\n        badgeBackgroundFill,\\n        badgeBackgroundStroke,\\n        badgeBackgroundLineDash,\\n        badgeBackgroundLineWidth,\\n        badgeBackgroundOpacity,\\n        badgeBackgroundRadius,\\n      ].forEach((i) => i.show(v));\\n    });\\n    const badgeBackgroundFill = optionFolder.addColor(options, 'badgeBackgroundFill').hide();\\n    const badgeBackgroundStroke = optionFolder.addColor(options, 'badgeBackgroundStroke').hide();\\n    const badgeBackgroundLineDash = optionFolder.add(options, 'badgeBackgroundLineDash', 0, 10).hide();\\n    const badgeBackgroundLineWidth = optionFolder.add(options, 'badgeBackgroundLineWidth', 0, 10).hide();\\n    const badgeBackgroundOpacity = optionFolder.add(options, 'badgeBackgroundOpacity', 0, 1).hide();\\n    const badgeBackgroundRadius = optionFolder.add(options, 'badgeBackgroundRadius', 0, 30).hide();\\n\\n    const port = optionFolder.add(options, 'port').onChange((v) => {\\n      [portR, portFill, portStroke].forEach((i) => i.show(v));\\n    });\\n    const portR = optionFolder.add(options, 'portR', 0, 20, 1).hide();\\n    const portFill = optionFolder.addColor(options, 'portFill').hide();\\n    const portStroke = optionFolder.addColor(options, 'portStroke').hide();\\n\\n    optionFolder.onChange(({ property, value, object }) => {\\n      let updateStyle = { [property]: value };\\n      if (['size[0]', 'size[1]'].includes(property)) {\\n        updateStyle.size = [object['size[0]'], object['size[1]']];\\n      } else if (['badgePlacement', 'badgeText'].includes(property)) {\\n        const nodeData = graph.getNodeData('node1').badges;\\n        updateStyle.badges = [{ text: object.badgeText, placement: object.badgePlacement }];\\n      }\\n      graph.updateNodeData([{ id: 'node1', style: updateStyle }]);\\n      graph.render();\\n    });\\n  },\\n);\\n\",\"paraId\":0},{\"value\":\"boolean\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"Default:\",\"paraId\":1,\"tocIndex\":0},{\"value\":\" \",\"paraId\":1,\"tocIndex\":0},{\"value\":\"true\",\"paraId\":1,\"tocIndex\":0},{\"value\":\"Whether to show the node badge\",\"paraId\":2,\"tocIndex\":0},{\"value\":\"string[]\",\"paraId\":3,\"tocIndex\":1},{\"value\":\"Badge background color palette\",\"paraId\":4,\"tocIndex\":1},{\"value\":\"NodeBadgeStyleProps\",\"paraId\":5,\"tocIndex\":2},{\"value\":\"[]\",\"paraId\":6,\"tocIndex\":2},{\"value\":\"Badge\",\"paraId\":7,\"tocIndex\":2},{\"value\":\"Example\",\"paraId\":8,\"tocIndex\":2},{\"value\":\"{\\r\\n  \\\"badge\\\": true,\\r\\n  \\\"badges\\\": [\\r\\n    { \\\"text\\\": \\\"A\\\", \\\"placement\\\": \\\"right-top\\\" },\\r\\n    { \\\"text\\\": \\\"Important\\\", \\\"placement\\\": \\\"right\\\" },\\r\\n    { \\\"text\\\": \\\"Notice\\\", \\\"placement\\\": \\\"right-bottom\\\" }\\r\\n  ],\\r\\n  \\\"badgePalette\\\": [\\\"#7E92B5\\\", \\\"#F4664A\\\", \\\"#FFBE3A\\\"]\\r\\n}\\n\",\"paraId\":9,\"tocIndex\":2},{\"value\":\"NodeData\",\"paraId\":10,\"tocIndex\":3},{\"value\":\"[]\",\"paraId\":11,\"tocIndex\":3},{\"value\":\"The data of the child node\",\"paraId\":12,\"tocIndex\":3},{\"value\":\" Only valid in the tree graph. If the current node is collapsed, children may be empty, and the complete child element data can be obtained through childrenData\",\"paraId\":13,\"tocIndex\":3},{\"value\":\"string\",\"paraId\":14,\"tocIndex\":4},{\"value\":\"[]\",\"paraId\":14,\"tocIndex\":4},{\"value\":\"The instance of the child node\",\"paraId\":15,\"tocIndex\":4},{\"value\":\" Only valid in the tree graph\",\"paraId\":16,\"tocIndex\":4},{\"value\":\"boolean\",\"paraId\":17,\"tocIndex\":5},{\"value\":\"Whether the current node/combo is expanded\",\"paraId\":18,\"tocIndex\":5},{\"value\":\"boolean\",\"paraId\":19,\"tocIndex\":6},{\"value\":\" \",\"paraId\":19,\"tocIndex\":6},{\"value\":\"Default:\",\"paraId\":19,\"tocIndex\":6},{\"value\":\" \",\"paraId\":19,\"tocIndex\":6},{\"value\":\"false\",\"paraId\":19,\"tocIndex\":6},{\"value\":\"Whether to show the node halo\",\"paraId\":20,\"tocIndex\":6},{\"value\":\"boolean\",\"paraId\":21,\"tocIndex\":7},{\"value\":\" \",\"paraId\":21,\"tocIndex\":7},{\"value\":\"Default:\",\"paraId\":21,\"tocIndex\":7},{\"value\":\" \",\"paraId\":21,\"tocIndex\":7},{\"value\":\"true\",\"paraId\":21,\"tocIndex\":7},{\"value\":\"Whether to show the node icon\",\"paraId\":22,\"tocIndex\":7},{\"value\":\"boolean\",\"paraId\":23,\"tocIndex\":8},{\"value\":\" \",\"paraId\":23,\"tocIndex\":8},{\"value\":\"Default:\",\"paraId\":23,\"tocIndex\":8},{\"value\":\" \",\"paraId\":23,\"tocIndex\":8},{\"value\":\"true\",\"paraId\":23,\"tocIndex\":8},{\"value\":\"Whether to show the node label\",\"paraId\":24,\"tocIndex\":8},{\"value\":\"boolean\",\"paraId\":25,\"tocIndex\":9},{\"value\":\" \",\"paraId\":25,\"tocIndex\":9},{\"value\":\"Default:\",\"paraId\":25,\"tocIndex\":9},{\"value\":\" \",\"paraId\":25,\"tocIndex\":9},{\"value\":\"true\",\"paraId\":25,\"tocIndex\":9},{\"value\":\"Whether to show the node port\",\"paraId\":26,\"tocIndex\":9},{\"value\":\"NodePortStyleProps\",\"paraId\":27,\"tocIndex\":10},{\"value\":\"[]\",\"paraId\":28,\"tocIndex\":10},{\"value\":\"Port configuration, supports configuring multiple ports\",\"paraId\":29,\"tocIndex\":10},{\"value\":\"Example\",\"paraId\":30,\"tocIndex\":10},{\"value\":\"{\\r\\n  \\\"port\\\": true,\\r\\n  \\\"ports\\\": [\\r\\n    {\\r\\n      \\\"key\\\": \\\"top\\\",\\r\\n      \\\"placement\\\": [0.5, 0],\\r\\n      \\\"r\\\": 4,\\r\\n      \\\"stroke\\\": \\\"#31d0c6\\\",\\r\\n      \\\"fill\\\": \\\"#fff\\\"\\r\\n    },\\r\\n    {\\r\\n      \\\"key\\\": \\\"bottom\\\",\\r\\n      \\\"placement\\\": [0.5, 1],\\r\\n      \\\"r\\\": 4,\\r\\n      \\\"stroke\\\": \\\"#31d0c6\\\",\\r\\n      \\\"fill\\\": \\\"#fff\\\"\\r\\n    }\\r\\n  ]\\r\\n}\\n\",\"paraId\":31,\"tocIndex\":10},{\"value\":\"number | [number, number] | Float32Array | [number, number, number]\",\"paraId\":32,\"tocIndex\":11},{\"value\":\"The size of node, which is a shortcut to set the width and height of node\",\"paraId\":33,\"tocIndex\":11},{\"value\":\"If the value is a number, it means the width, height, and depth of the node are the same as the specified value\",\"paraId\":34,\"tocIndex\":11},{\"value\":\"If the value is an array, it means the width, height, and depth of the node are represented by the array elements in turn\",\"paraId\":35,\"tocIndex\":11},{\"value\":\"number\",\"paraId\":36,\"tocIndex\":12},{\"value\":\"The x-coordinate of node\",\"paraId\":37,\"tocIndex\":12},{\"value\":\"number\",\"paraId\":38,\"tocIndex\":13},{\"value\":\"The y-coordinate of node\",\"paraId\":39,\"tocIndex\":13},{\"value\":\"number\",\"paraId\":40,\"tocIndex\":14},{\"value\":\"The z-coordinate of node\",\"paraId\":41,\"tocIndex\":14},{\"value\":\"TextStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":43,\"tocIndex\":16},{\"value\":\"fill\",\"paraId\":44,\"tocIndex\":16},{\"value\":\"fontSize\",\"paraId\":44,\"tocIndex\":16},{\"value\":\"fontWeight\",\"paraId\":44,\"tocIndex\":16},{\"value\":\"...\",\"paraId\":44,\"tocIndex\":16},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":45,\"tocIndex\":16},{\"value\":\"iconFill\",\"paraId\":46,\"tocIndex\":16},{\"value\":\"iconFontSize\",\"paraId\":46,\"tocIndex\":16},{\"value\":\"iconFontWeight\",\"paraId\":46,\"tocIndex\":16},{\"value\":\"...\",\"paraId\":46,\"tocIndex\":16},{\"value\":\"string | number\",\"paraId\":47,\"tocIndex\":17},{\"value\":\" \",\"paraId\":47,\"tocIndex\":17},{\"value\":\"Default:\",\"paraId\":47,\"tocIndex\":17},{\"value\":\" \",\"paraId\":47,\"tocIndex\":17},{\"value\":\"'200%'\",\"paraId\":47,\"tocIndex\":17},{\"value\":\"The maximum width of the label\",\"paraId\":48,\"tocIndex\":17},{\"value\":\"string: When set to a string, it defines the maximum width as a percentage of the node width. For example, \",\"paraId\":49,\"tocIndex\":17},{\"value\":\"\\\"50%\\\"\",\"paraId\":49,\"tocIndex\":17},{\"value\":\" means the label width does not exceed half of the node width\",\"paraId\":49,\"tocIndex\":17},{\"value\":\"number: When set to a number, it defines the maximum width in pixels. For example, \",\"paraId\":50,\"tocIndex\":17},{\"value\":\"100\",\"paraId\":50,\"tocIndex\":17},{\"value\":\" means the maximum width of the label is 100 pixels\",\"paraId\":50,\"tocIndex\":17},{\"value\":\"number\",\"paraId\":51,\"tocIndex\":18},{\"value\":\"The offset of the label in the x-axis direction\",\"paraId\":52,\"tocIndex\":18},{\"value\":\"number\",\"paraId\":53,\"tocIndex\":19},{\"value\":\"The offset of the label in the y-axis direction\",\"paraId\":54,\"tocIndex\":19},{\"value\":\"'left' | 'right' | 'top' | 'bottom' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right' | 'center'\",\"paraId\":55,\"tocIndex\":20},{\"value\":\" \",\"paraId\":55,\"tocIndex\":20},{\"value\":\"Default:\",\"paraId\":55,\"tocIndex\":20},{\"value\":\" \",\"paraId\":55,\"tocIndex\":20},{\"value\":\"'bottom'\",\"paraId\":55,\"tocIndex\":20},{\"value\":\"Label position relative to the node (keyShape)\",\"paraId\":56,\"tocIndex\":20},{\"value\":\"boolean\",\"paraId\":57,\"tocIndex\":21},{\"value\":\"Whether to show background\",\"paraId\":58,\"tocIndex\":21},{\"value\":\"number | number[]\",\"paraId\":59,\"tocIndex\":22},{\"value\":\" \",\"paraId\":59,\"tocIndex\":22},{\"value\":\"Default:\",\"paraId\":59,\"tocIndex\":22},{\"value\":\" \",\"paraId\":59,\"tocIndex\":22},{\"value\":\"0\",\"paraId\":59,\"tocIndex\":22},{\"value\":\"Label padding\",\"paraId\":60,\"tocIndex\":22},{\"value\":\"RectStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":61,\"tocIndex\":24},{\"value\":\"fill\",\"paraId\":62,\"tocIndex\":24},{\"value\":\"fontSize\",\"paraId\":62,\"tocIndex\":24},{\"value\":\"fontWeight\",\"paraId\":62,\"tocIndex\":24},{\"value\":\"...\",\"paraId\":62,\"tocIndex\":24},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":63,\"tocIndex\":24},{\"value\":\"iconFill\",\"paraId\":64,\"tocIndex\":24},{\"value\":\"iconFontSize\",\"paraId\":64,\"tocIndex\":24},{\"value\":\"iconFontWeight\",\"paraId\":64,\"tocIndex\":24},{\"value\":\"...\",\"paraId\":64,\"tocIndex\":24},{\"value\":\"BaseStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":65,\"tocIndex\":26},{\"value\":\"fill\",\"paraId\":66,\"tocIndex\":26},{\"value\":\"fontSize\",\"paraId\":66,\"tocIndex\":26},{\"value\":\"fontWeight\",\"paraId\":66,\"tocIndex\":26},{\"value\":\"...\",\"paraId\":66,\"tocIndex\":26},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":67,\"tocIndex\":26},{\"value\":\"iconFill\",\"paraId\":68,\"tocIndex\":26},{\"value\":\"iconFontSize\",\"paraId\":68,\"tocIndex\":26},{\"value\":\"iconFontWeight\",\"paraId\":68,\"tocIndex\":26},{\"value\":\"...\",\"paraId\":68,\"tocIndex\":26},{\"value\":\"BaseStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":69,\"tocIndex\":28},{\"value\":\"fill\",\"paraId\":70,\"tocIndex\":28},{\"value\":\"fontSize\",\"paraId\":70,\"tocIndex\":28},{\"value\":\"fontWeight\",\"paraId\":70,\"tocIndex\":28},{\"value\":\"...\",\"paraId\":70,\"tocIndex\":28},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":71,\"tocIndex\":28},{\"value\":\"iconFill\",\"paraId\":72,\"tocIndex\":28},{\"value\":\"iconFontSize\",\"paraId\":72,\"tocIndex\":28},{\"value\":\"iconFontWeight\",\"paraId\":72,\"tocIndex\":28},{\"value\":\"...\",\"paraId\":72,\"tocIndex\":28},{\"value\":\"TextStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":73,\"tocIndex\":29},{\"value\":\"fill\",\"paraId\":74,\"tocIndex\":29},{\"value\":\"fontSize\",\"paraId\":74,\"tocIndex\":29},{\"value\":\"fontWeight\",\"paraId\":74,\"tocIndex\":29},{\"value\":\"...\",\"paraId\":74,\"tocIndex\":29},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":75,\"tocIndex\":29},{\"value\":\"iconFill\",\"paraId\":76,\"tocIndex\":29},{\"value\":\"iconFontSize\",\"paraId\":76,\"tocIndex\":29},{\"value\":\"iconFontWeight\",\"paraId\":76,\"tocIndex\":29},{\"value\":\"...\",\"paraId\":76,\"tocIndex\":29},{\"value\":\"ImageStyleProps\",\"paraId\":42},{\"value\":\"Excludes z\",\"paraId\":77,\"tocIndex\":30},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":78,\"tocIndex\":30},{\"value\":\"fill\",\"paraId\":79,\"tocIndex\":30},{\"value\":\"fontSize\",\"paraId\":79,\"tocIndex\":30},{\"value\":\"fontWeight\",\"paraId\":79,\"tocIndex\":30},{\"value\":\"...\",\"paraId\":79,\"tocIndex\":30},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":80,\"tocIndex\":30},{\"value\":\"iconFill\",\"paraId\":81,\"tocIndex\":30},{\"value\":\"iconFontSize\",\"paraId\":81,\"tocIndex\":30},{\"value\":\"iconFontWeight\",\"paraId\":81,\"tocIndex\":30},{\"value\":\"...\",\"paraId\":81,\"tocIndex\":30},{\"value\":\"TextStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":82,\"tocIndex\":32},{\"value\":\"fill\",\"paraId\":83,\"tocIndex\":32},{\"value\":\"fontSize\",\"paraId\":83,\"tocIndex\":32},{\"value\":\"fontWeight\",\"paraId\":83,\"tocIndex\":32},{\"value\":\"...\",\"paraId\":83,\"tocIndex\":32},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":84,\"tocIndex\":32},{\"value\":\"iconFill\",\"paraId\":85,\"tocIndex\":32},{\"value\":\"iconFontSize\",\"paraId\":85,\"tocIndex\":32},{\"value\":\"iconFontWeight\",\"paraId\":85,\"tocIndex\":32},{\"value\":\"...\",\"paraId\":85,\"tocIndex\":32},{\"value\":\"boolean\",\"paraId\":86,\"tocIndex\":33},{\"value\":\"Whether to show background\",\"paraId\":87,\"tocIndex\":33},{\"value\":\"number | number[]\",\"paraId\":88,\"tocIndex\":34},{\"value\":\" \",\"paraId\":88,\"tocIndex\":34},{\"value\":\"Default:\",\"paraId\":88,\"tocIndex\":34},{\"value\":\" \",\"paraId\":88,\"tocIndex\":34},{\"value\":\"0\",\"paraId\":88,\"tocIndex\":34},{\"value\":\"Label padding\",\"paraId\":89,\"tocIndex\":34},{\"value\":\"RectStyleProps\",\"paraId\":42},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":90,\"tocIndex\":36},{\"value\":\"fill\",\"paraId\":91,\"tocIndex\":36},{\"value\":\"fontSize\",\"paraId\":91,\"tocIndex\":36},{\"value\":\"fontWeight\",\"paraId\":91,\"tocIndex\":36},{\"value\":\"...\",\"paraId\":91,\"tocIndex\":36},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":92,\"tocIndex\":36},{\"value\":\"iconFill\",\"paraId\":93,\"tocIndex\":36},{\"value\":\"iconFontSize\",\"paraId\":93,\"tocIndex\":36},{\"value\":\"iconFontWeight\",\"paraId\":93,\"tocIndex\":36},{\"value\":\"...\",\"paraId\":93,\"tocIndex\":36},{\"value\":\"CircleStyleProps\",\"paraId\":42},{\"value\":\"Excludes r\",\"paraId\":94,\"tocIndex\":38},{\"value\":\"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.\",\"paraId\":42},{\"value\":\"TextStyleProps includes the following properties:\",\"paraId\":95,\"tocIndex\":38},{\"value\":\"fill\",\"paraId\":96,\"tocIndex\":38},{\"value\":\"fontSize\",\"paraId\":96,\"tocIndex\":38},{\"value\":\"fontWeight\",\"paraId\":96,\"tocIndex\":38},{\"value\":\"...\",\"paraId\":96,\"tocIndex\":38},{\"value\":\"icon{TextStyleProps} means you need to use the following property names:\",\"paraId\":97,\"tocIndex\":38},{\"value\":\"iconFill\",\"paraId\":98,\"tocIndex\":38},{\"value\":\"iconFontSize\",\"paraId\":98,\"tocIndex\":38},{\"value\":\"iconFontWeight\",\"paraId\":98,\"tocIndex\":38},{\"value\":\"...\",\"paraId\":98,\"tocIndex\":38},{\"value\":\"boolean\",\"paraId\":99,\"tocIndex\":39},{\"value\":\" \",\"paraId\":99,\"tocIndex\":39},{\"value\":\"Default:\",\"paraId\":99,\"tocIndex\":39},{\"value\":\" \",\"paraId\":99,\"tocIndex\":39},{\"value\":\"false\",\"paraId\":99,\"tocIndex\":39},{\"value\":\"Whether the edge is connected to the center of the port\",\"paraId\":100,\"tocIndex\":39},{\"value\":\"If \",\"paraId\":101,\"tocIndex\":39},{\"value\":\"true\",\"paraId\":101,\"tocIndex\":39},{\"value\":\", the edge is connected to the center of the port\",\"paraId\":101,\"tocIndex\":39},{\"value\":\"If \",\"paraId\":102,\"tocIndex\":39},{\"value\":\"false\",\"paraId\":102,\"tocIndex\":39},{\"value\":\", the edge is connected to the edge of the port\",\"paraId\":102,\"tocIndex\":39},{\"value\":\"number\",\"paraId\":103,\"tocIndex\":40},{\"value\":\"The radius of the port\",\"paraId\":104,\"tocIndex\":40},{\"value\":\"If set to \",\"paraId\":105,\"tocIndex\":40},{\"value\":\"undefined\",\"paraId\":105,\"tocIndex\":40},{\"value\":\", the port is treated as a point, not displayed on the canvas but exists, and the edge will be connected to the nearest port first\",\"paraId\":105,\"tocIndex\":40},{\"value\":\"If set to a number, the port is treated as a circle, and the radius of the circle is specified here\",\"paraId\":106,\"tocIndex\":40}];\n  "],"names":[],"mappings":"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"}