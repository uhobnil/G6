(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["5e052e2b"],{"5e052e2b":function(a,e,t){"use strict";t.d(e,"__esModule",{value:!0}),t.d(e,"texts",{enumerable:!0,get:function(){return o;}}),t("c2abd94a");let o=[{value:"Graph layout refers to the process of arranging the elements in a graph according to certain rules, such as force-directed layouts based on the electrostatic model, sequential arrangement in grid layouts, and tree layouts based on hierarchical structures, etc.",paraId:0,tocIndex:0},{value:"G6 provides a variety of layout algorithms, allowing users to select the appropriate layout algorithm based on their needs:",paraId:1,tocIndex:1},{value:"AntVDagreLayout",paraId:2,tocIndex:1},{value:": A layout based on dagre customization",paraId:3,tocIndex:1},{value:"CircularLayout",paraId:4,tocIndex:1},{value:": Circular layout",paraId:3,tocIndex:1},{value:"ComboCombinedLayout",paraId:5,tocIndex:1},{value:": A layout suitable for scenarios with combos",paraId:3,tocIndex:1},{value:"ConcentricLayout",paraId:6,tocIndex:1},{value:": Concentric circle layout",paraId:3,tocIndex:1},{value:"D3Force3DLayout",paraId:7,tocIndex:1},{value:": A ",paraId:3,tocIndex:1},{value:"3D force-directed",paraId:3,tocIndex:1},{value:" layout",paraId:3,tocIndex:1},{value:"D3ForceLayout",paraId:8,tocIndex:1},{value:": A force-directed layout based on ",paraId:3,tocIndex:1},{value:"D3",paraId:3,tocIndex:1},{value:"DagreLayout",paraId:9,tocIndex:1},{value:": A layout based on ",paraId:3,tocIndex:1},{value:"dagre",paraId:3,tocIndex:1},{value:"ForceAtlas2Layout",paraId:10,tocIndex:1},{value:": A layout based on ",paraId:3,tocIndex:1},{value:"ForceAtlas2",paraId:3,tocIndex:1},{value:"ForceLayout",paraId:11,tocIndex:1},{value:": Force-directed layout",paraId:3,tocIndex:1},{value:"FruchtermanLayout",paraId:12,tocIndex:1},{value:": A layout based on ",paraId:3,tocIndex:1},{value:"Fruchterman",paraId:3,tocIndex:1},{value:"GridLayout",paraId:13,tocIndex:1},{value:": Grid layout",paraId:3,tocIndex:1},{value:"MDSLayout",paraId:14,tocIndex:1},{value:": A layout algorithm for high-dimensional data dimensionality reduction",paraId:3,tocIndex:1},{value:"RadialLayout",paraId:15,tocIndex:1},{value:": Radial layout",paraId:3,tocIndex:1},{value:"RandomLayout",paraId:16,tocIndex:1},{value:": Random layout",paraId:3,tocIndex:1},{value:"CompactBox Layout: Compact tree layout",paraId:3,tocIndex:1},{value:"Dendrogram Layout: Dendrogram layout",paraId:3,tocIndex:1},{value:"Mindmap Layout: Mind map layout",paraId:3,tocIndex:1},{value:"Indented Layout: Indented tree layout",paraId:3,tocIndex:1},{value:"Among them, ",paraId:17,tocIndex:1},{value:"CompactBox Layout",paraId:17,tocIndex:1},{value:", ",paraId:17,tocIndex:1},{value:"Dendrogram Layout",paraId:17,tocIndex:1},{value:", ",paraId:17,tocIndex:1},{value:"Mindmap Layout",paraId:17,tocIndex:1},{value:", and ",paraId:17,tocIndex:1},{value:"Indented Layout",paraId:17,tocIndex:1},{value:" are types of tree layouts, suitable for graphs with tree-like structures.",paraId:17,tocIndex:1},{value:"You can directly use the built-in layouts, but if you want to use other layouts, you need to register them first:",paraId:18,tocIndex:2},{value:"import { register, ExtensionCategory } from '@antv/g6';\nimport { CustomLayout } from 'package-name/or/path-to-your-custom-layout';\n\nregister(ExtensionCategory.LAYOUT, 'custom-layout', CustomLayout);\n",paraId:19,tocIndex:2},{value:"You can specify the graph's layout algorithm through the ",paraId:20,tocIndex:3},{value:"layout",paraId:20,tocIndex:3},{value:" option, for example:",paraId:20,tocIndex:3},{value:"{\n  layout: {\n    // Specify the layout algorithm to be used\n    type: 'force',\n    // Layout Algorithm Options\n    gravity: 10\n    // ...\n  }\n}\n",paraId:21,tocIndex:3},{value:"You can also update the layout configuration after instantiating the graph using ",paraId:22,tocIndex:3},{value:"graph.setLayout",paraId:22,tocIndex:3},{value:".",paraId:22,tocIndex:3},{value:"G6 provides accelerated versions of some layout algorithms, including: executing layout algorithms in a Web Worker, providing ",paraId:23,tocIndex:4},{value:"WASM",paraId:23,tocIndex:4},{value:" versions of layout algorithms, and GPU-accelerated layout algorithms. They can be used in the following ways:",paraId:23,tocIndex:4},{value:"All built-in layout algorithms in G6, except for tree layouts, support execution in a Web Worker. Simply set ",paraId:24,tocIndex:5},{value:"enableWorker",paraId:24,tocIndex:5},{value:" to ",paraId:24,tocIndex:5},{value:"true",paraId:24,tocIndex:5},{value:":",paraId:24,tocIndex:5},{value:"{\n  layout: {\n    type: 'force',\n    enableWorker: true,\n    // ...\n  }\n}\n",paraId:25,tocIndex:5},{value:"The layout algorithms that currently support WASM versions are: ",paraId:26,tocIndex:6},{value:"Fruchterman Layout",paraId:26,tocIndex:6},{value:", ",paraId:26,tocIndex:6},{value:"ForceAtlas Layout",paraId:26,tocIndex:6},{value:", ",paraId:26,tocIndex:6},{value:"Force Layout",paraId:26,tocIndex:6},{value:", ",paraId:26,tocIndex:6},{value:"Dagre Layout",paraId:26,tocIndex:6},{value:".",paraId:26,tocIndex:6},{value:"First, install ",paraId:27,tocIndex:6},{value:"@antv/layout-wasm",paraId:27,tocIndex:6},{value:":",paraId:27,tocIndex:6},{value:"npm install @antv/layout-wasm --save\n",paraId:28,tocIndex:6},{value:"Import and Register the Layout Algorithm:",paraId:29,tocIndex:6},{value:"import { register, Graph, ExtensionCategory } from '@antv/g6';\nimport { FruchtermanLayout, initThreads, supportsThreads } from '@antv/layout-wasm';\n\nregister(ExtensionCategory.LAYOUT, 'fruchterman-wasm', FruchtermanLayout);\n",paraId:30,tocIndex:6},{value:"Initialize the Thread:",paraId:31,tocIndex:6},{value:"const supported = await supportsThreads();\nconst threads = await initThreads(supported);\n",paraId:32,tocIndex:6},{value:"Initialize the Graph and Pass in Layout Configuration:",paraId:33,tocIndex:6},{value:"const graph = new Graph({\n  // ... other configurations\n  layout: {\n    type: 'fruchterman-wasm',\n    threads,\n    // ... other configurations\n  },\n});\n",paraId:34,tocIndex:6},{value:"The layout algorithms that currently support GPU acceleration are: ",paraId:35,tocIndex:7},{value:"Fruchterman Layout",paraId:35,tocIndex:7},{value:" and ",paraId:35,tocIndex:7},{value:"GForce Layout",paraId:35,tocIndex:7},{value:".",paraId:35,tocIndex:7},{value:"First, install ",paraId:36,tocIndex:7},{value:"@antv/layout-gpu",paraId:36,tocIndex:7},{value:":",paraId:36,tocIndex:7},{value:"npm install @antv/layout-gpu --save\n",paraId:37,tocIndex:7},{value:"Import and Register the Layout Algorithm:",paraId:38,tocIndex:7},{value:"import { register, Graph, ExtensionCategory } from '@antv/g6';\nimport { FruchtermanLayout } from '@antv/layout-gpu';\n\nregister(ExtensionCategory.LAYOUT, 'fruchterman-gpu', FruchtermanLayout);\n",paraId:39,tocIndex:7},{value:"Initialize the Graph and Pass in Layout Configuration:",paraId:40,tocIndex:7},{value:"const graph = new Graph({\n  // ... other configurations\n  layout: {\n    type: 'fruchterman-gpu',\n    // ... other configurations\n  },\n});\n",paraId:41,tocIndex:7},{value:"Usually, after calling ",paraId:42,tocIndex:8},{value:"graph.render()",paraId:42,tocIndex:8},{value:", G6 will automatically execute the layout algorithm.",paraId:42,tocIndex:8},{value:"If you need to manually execute the layout algorithm, G6 provides the following APIs:",paraId:43,tocIndex:8},{value:"layout",paraId:44,tocIndex:8},{value:": Execute the layout algorithm",paraId:45,tocIndex:8},{value:"setLayout",paraId:46,tocIndex:8},{value:": Set the layout algorithm",paraId:45,tocIndex:8},{value:"stopLayout",paraId:47,tocIndex:8},{value:": Stop the layout algorithm",paraId:45,tocIndex:8},{value:"If the built-in layout algorithms do not meet your requirements, you can create a custom layout algorithm. For details, please refer to ",paraId:48,tocIndex:9},{value:"Custom Layout",paraId:49,tocIndex:9},{value:".",paraId:48,tocIndex:9}];}}]);
//# sourceMappingURL=5e052e2b-async.98cb4f81.js.map