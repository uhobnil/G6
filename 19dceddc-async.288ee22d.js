(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["19dceddc"],{"19dceddc":function(e,a,r){"use strict";r.d(a,"__esModule",{value:!0}),r.d(a,"texts",{enumerable:!0,get:function(){return o;}}),r("4fff3504");let o=[{value:"Behavior refers to a series of operational behaviors between the user and the canvas or elements, such as dragging, scaling, panning, and selecting. Interactions help users to more intuitively obtain information from the graph.",paraId:0,tocIndex:0},{value:'In G6 5.x, the concept of "interaction mode" (Mode) has been removed. Users only need to manage the currently enabled behaviors.',paraId:1},{value:"G6 provides a rich set of interactive features, and users can choose the appropriate interactive behaviors according to their needs, including:",paraId:2},{value:"Brush Select",paraId:3},{value:": Box Selection",paraId:4},{value:"Click Select",paraId:5},{value:": Single Click Selection",paraId:4},{value:"Collapse Expand",paraId:6},{value:": Expand and Collapse",paraId:4},{value:"Create Edge",paraId:7},{value:": Create an Edge",paraId:4},{value:"Drag Canvas",paraId:8},{value:": Drag the Canvas",paraId:4},{value:"Drag Element",paraId:9},{value:": Drag an Element",paraId:4},{value:"Focus Element",paraId:10},{value:": Focus on an Element",paraId:4},{value:"Hover Element",paraId:11},{value:": Hover Over an Element",paraId:4},{value:"Lasso Select",paraId:12},{value:": Lasso Selection",paraId:4},{value:"Zoom Canvas",paraId:13},{value:": Zoom the Canvas",paraId:4},{value:"You can directly use the built-in behaviors. If you want to use other behaviors, you need to register them first:",paraId:14,tocIndex:1},{value:"import { register, ExtensionCategory } from '@antv/g6';\nimport { CustomBehavior } from 'package-name/or/path-to-your-custom-behavior';\n\nregister(ExtensionCategory.BEHAVIOR, 'custom-behavior', CustomBehavior);\n",paraId:15,tocIndex:1},{value:"You can directly configure the names of behavior types in the ",paraId:16,tocIndex:2},{value:"behaviors",paraId:16,tocIndex:2},{value:" array, for example:",paraId:16,tocIndex:2},{value:"{\n  behaviors: ['drag-canvas', 'zoom-canvas', 'drag-element', 'click-select'],\n}\n",paraId:17,tocIndex:2},{value:"It also supports passing configuration parameters in the form of an ",paraId:18,tocIndex:2},{value:"object",paraId:18,tocIndex:2},{value:", for example:",paraId:18,tocIndex:2},{value:"{\n  behaviors: [\n    {\n      type: 'zoom-canvas',\n      sensitivity: 2,\n    },\n  ],\n}\n",paraId:19,tocIndex:2},{value:"Different behaviors support different configuration parameters. For details, please refer to ",paraId:20,tocIndex:2},{value:"behaviors",paraId:21,tocIndex:2},{value:".",paraId:20,tocIndex:2},{value:"If you need to update behaviors after initialization, for example, to temporarily disable a certain behavior, you can use the ",paraId:22,tocIndex:3},{value:"updateBehavior",paraId:23,tocIndex:3},{value:" method:",paraId:22,tocIndex:3},{value:"// Disable the `zoom-canvas` behavior.\ngraph.updateBehavior({\n  key: 'zoom-canvas',\n  enable: false,\n});\n",paraId:24,tocIndex:3},{value:"To use the ",paraId:25},{value:"updateBehavior",paraId:25},{value:" method, you must configure the behavior as an ",paraId:25},{value:"object",paraId:25},{value:" during initialization and provide a ",paraId:25},{value:"key",paraId:25},{value:" value.",paraId:25},{value:"You can also use the ",paraId:26},{value:"setBehaviors",paraId:27},{value:" method to add, update, or remove current behavior behaviors at any time:",paraId:26},{value:"// Add the `lasso-select` behavior\ngraph.setBehaviors((behaviors) => [...behaviors, 'lasso-select']);\n\n// Update the `zoom-canvas` behavior (requires configure the behavior as an `object` with a `key` during initialization)\ngraph.setBehaviors((behaviors) =>\n  behaviors.map((behavior) => {\n    if (behavior.key === 'zoom-canvas') {\n      return { ...behavior, sensitivity: 2 };\n    }\n    return behavior;\n  }),\n);\n\n// Remove the `click-select` behavior\ngraph.setBehaviors((behaviors) => behaviors.filter((behavior) => behavior !== 'click-select'));\n",paraId:28},{value:"If the built-in behaviors do not meet your requirements, you can create custom behaviors. For details, please refer to ",paraId:29,tocIndex:4},{value:"Custom Behavior",paraId:30,tocIndex:4},{value:".",paraId:29,tocIndex:4}];}}]);
//# sourceMappingURL=19dceddc-async.288ee22d.js.map