(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["fba63b25"],{fba63b25:function(a,e,d){"use strict";d.d(e,"__esModule",{value:!0}),d.d(e,"texts",{enumerable:!0,get:function(){return o;}}),d("34d5aa37");let o=[{value:"@antv/g6",paraId:0},{value:" > ",paraId:1},{value:"GraphData",paraId:2},{value:"Graph data",paraId:3,tocIndex:0},{value:"export interface GraphData\n",paraId:4,tocIndex:0},{value:" Graph data is one of the data types received by Graph, which contains a collection of nodes, edges, and combos.",paraId:5,tocIndex:0},{value:" An example of a graph data is as follows:",paraId:6,tocIndex:0},{value:'{\r\n "nodes": [\r\n   { "id": "node1", "combo": "combo-1", "style": { "x": 100, "y": 100 } },\r\n   { "id": "node2", "style": { "x": 200, "y": 200 } }\r\n ],\r\n "edges": [{ "source": "node1", "target": "node2" }],\r\n "combos": [{ "id": "combo-1", "style": { "x": 100, "y": 100 } }]\r\n}\n',paraId:7,tocIndex:0},{value:"Property",paraId:8,tocIndex:1},{value:"Type",paraId:9,tocIndex:1},{value:"Default Value",paraId:10,tocIndex:1},{value:"Description",paraId:11,tocIndex:1},{value:"combos",paraId:12,tocIndex:1},{value:"ComboData",paraId:13,tocIndex:1},{value:"[]",paraId:14,tocIndex:1},{value:"/",paraId:15,tocIndex:1},{value:"(Optional)",paraId:16,tocIndex:1},{value:" combo data",paraId:16,tocIndex:1},{value:"edges",paraId:17,tocIndex:1},{value:"EdgeData",paraId:18,tocIndex:1},{value:"[]",paraId:19,tocIndex:1},{value:"/",paraId:20,tocIndex:1},{value:"(Optional)",paraId:21,tocIndex:1},{value:" edge data",paraId:21,tocIndex:1},{value:"nodes",paraId:22,tocIndex:1},{value:"NodeData",paraId:23,tocIndex:1},{value:"[]",paraId:24,tocIndex:1},{value:"/",paraId:25,tocIndex:1},{value:"(Optional)",paraId:26,tocIndex:1},{value:" node data",paraId:26,tocIndex:1}];}}]);
//# sourceMappingURL=fba63b25-async.c86e54b5.js.map