(("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]=("undefined"!=typeof globalThis?globalThis:self)["makoChunk_@antv/g6-site"]||[]).push([["215a17d9"],{"215a17d9":function(e,a,t){"use strict";t.d(a,"__esModule",{value:!0}),t.d(a,"texts",{enumerable:!0,get:function(){return o;}}),t("cd75f927");let o=[{value:"createGraph(\n  {\n    data: {\n      nodes: [{ id: 'node1' }, { id: 'node2' }],\n      edges: [\n        {\n          id: 'edge1',\n          source: 'node1',\n          target: 'node2',\n          style: {\n            stroke: '#7e3feb',\n            lineWidth: 2,\n            labelText: 'node1 \u{1F449} node2',\n            labelBackground: true,\n            labelBackgroundFill: '#f9f0ff',\n            labelBackgroundOpacity: 1,\n            labelBackgroundLineWidth: 2,\n            labelBackgroundStroke: '#7e3feb',\n            labelPadding: [1, 10],\n            labelBackgroundRadius: 4,\n          },\n        },\n      ],\n    },\n    node: {\n      style: {\n        fill: '#f8f8f8',\n        stroke: '#8b9baf',\n        lineWidth: 1,\n        labelText: (d) => d.id,\n      },\n    },\n    behaviors: ['drag-canvas', 'drag-element'],\n    layout: { type: 'grid', cols: 2 },\n    plugins: [{ type: 'grid-line', size: 30 }],\n  },\n  { width: 600, height: 500 },\n  (gui, graph) => {\n    const options = {\n      lineWidth: 2,\n      opacity: 1,\n      stroke: '#7e3feb',\n\n      startArrow: false,\n      startArrowSize: 8,\n      startArrowType: 'triangle',\n\n      endArrow: false,\n      endArrowSize: 8,\n      endArrowType: 'triangle',\n\n      label: true,\n      labelAutoRotate: true,\n      labelMaxWidth: '80%',\n      labelOffsetX: 0,\n      labelOffsetY: 0,\n      labelPadding: 0,\n      labelPlacement: 'center',\n      labelText: 'node1 \u{1F449} node2',\n\n      labelBackground: true,\n      labelBackgroundFill: '#f9f0ff',\n      labelBackgroundStroke: '#7e3feb',\n      labelBackgroundLineDash: 0,\n      labelBackgroundLineWidth: 2,\n      labelBackgroundOpacity: 1,\n      labelBackgroundRadius: 4,\n\n      halo: false,\n      haloLineDash: 0,\n      haloLineWidth: 12,\n      haloStrokeOpacity: 0.25,\n    };\n    const optionFolder = gui.addFolder('edge.style');\n\n    optionFolder.add(options, 'lineWidth', 0, 20);\n    optionFolder.add(options, 'opacity', 0, 1);\n    optionFolder.addColor(options, 'stroke');\n\n    // startArrow\n    optionFolder.add(options, 'startArrow').onChange((v) => {\n      startArrowSize.show(v);\n      startArrowType.show(v);\n    });\n    const startArrowSize = optionFolder.add(options, 'startArrowSize', 0, 20).hide();\n    const startArrowType = optionFolder\n      .add(options, 'startArrowType', ['triangle', 'circle', 'diamond', 'vee', 'rect', 'triangleRect', 'simple'])\n      .hide();\n\n    // endArrow\n    optionFolder.add(options, 'endArrow').onChange((v) => {\n      endArrowSize.show(v);\n      endArrowType.show(v);\n    });\n    const endArrowSize = optionFolder.add(options, 'endArrowSize', 0, 20).hide();\n    const endArrowType = optionFolder\n      .add(options, 'endArrowType', ['triangle', 'circle', 'diamond', 'vee', 'rect', 'triangleRect', 'simple'])\n      .hide();\n\n    // label\n    optionFolder.add(options, 'label').onChange((v) => {\n      [labelAutoRotate, labelMaxWidth, labelOffsetX, labelOffsetY, labelPadding, labelPlacement, labelText].forEach(\n        (i) => i.show(v),\n      );\n    });\n    const labelAutoRotate = optionFolder.add(options, 'labelAutoRotate');\n    const labelMaxWidth = optionFolder.add(options, 'labelMaxWidth', ['80%', '20px', '200%']);\n    const labelOffsetX = optionFolder.add(options, 'labelOffsetX', 0, 50);\n    const labelOffsetY = optionFolder.add(options, 'labelOffsetY', 0, 50);\n    const labelPadding = optionFolder.add(options, 'labelPadding', 0, 20);\n    const labelPlacement = optionFolder.add(options, 'labelPlacement', ['start', 'center', 'end', 0.2, 0.8]);\n    const labelText = optionFolder.add(options, 'labelText');\n\n    const labelBackground = optionFolder.add(options, 'labelBackground').onChange((v) => {\n      [\n        labelBackgroundFill,\n        labelBackgroundStroke,\n        labelBackgroundLineDash,\n        labelBackgroundLineWidth,\n        labelBackgroundOpacity,\n        labelBackgroundRadius,\n      ].forEach((i) => i.show(v));\n    });\n    const labelBackgroundFill = optionFolder.addColor(options, 'labelBackgroundFill').hide();\n    const labelBackgroundStroke = optionFolder.addColor(options, 'labelBackgroundStroke').hide();\n    const labelBackgroundLineDash = optionFolder.add(options, 'labelBackgroundLineDash', 0, 10).hide();\n    const labelBackgroundLineWidth = optionFolder.add(options, 'labelBackgroundLineWidth', 0, 10).hide();\n    const labelBackgroundOpacity = optionFolder.add(options, 'labelBackgroundOpacity', 0, 1).hide();\n    const labelBackgroundRadius = optionFolder.add(options, 'labelBackgroundRadius', 0, 30).hide();\n\n    const halo = optionFolder.add(options, 'halo').onChange((v) => {\n      [haloStrokeOpacity, haloLineDash, haloLineWidth].forEach((i) => i.show(v));\n    });\n    const haloStrokeOpacity = optionFolder.addColor(options, 'haloStrokeOpacity', 0, 1).hide();\n    const haloLineDash = optionFolder.add(options, 'haloLineDash', 0, 10).hide();\n    const haloLineWidth = optionFolder.add(options, 'haloLineWidth', 0, 10).hide();\n\n    optionFolder.onChange(({ property, value }) => {\n      graph.updateEdgeData([{ id: 'edge1', style: { [property]: value } }]);\n      graph.render();\n    });\n  },\n);\n",paraId:0},{value:"boolean",paraId:1,tocIndex:0},{value:" ",paraId:1,tocIndex:0},{value:"Default:",paraId:1,tocIndex:0},{value:" ",paraId:1,tocIndex:0},{value:"true",paraId:1,tocIndex:0},{value:"Whether to display the badge of the edge",paraId:2,tocIndex:0},{value:"boolean",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"Default:",paraId:3,tocIndex:1},{value:" ",paraId:3,tocIndex:1},{value:"false",paraId:3,tocIndex:1},{value:"Whether to display the end arrow of the edge",paraId:4,tocIndex:1},{value:"number",paraId:5,tocIndex:2},{value:"Offset of the end arrow",paraId:6,tocIndex:2},{value:"boolean",paraId:7,tocIndex:3},{value:" ",paraId:7,tocIndex:3},{value:"Default:",paraId:7,tocIndex:3},{value:" ",paraId:7,tocIndex:3},{value:"false",paraId:7,tocIndex:3},{value:"Whether to display the halo of the edge",paraId:8,tocIndex:3},{value:"boolean",paraId:9,tocIndex:4},{value:" ",paraId:9,tocIndex:4},{value:"Default:",paraId:9,tocIndex:4},{value:" ",paraId:9,tocIndex:4},{value:"true",paraId:9,tocIndex:4},{value:"Effective in 3D scenes, always facing the screen, so the line width is not affected by the perspective projection image",paraId:10,tocIndex:4},{value:"boolean",paraId:11,tocIndex:5},{value:" ",paraId:11,tocIndex:5},{value:"Default:",paraId:11,tocIndex:5},{value:" ",paraId:11,tocIndex:5},{value:"true",paraId:11,tocIndex:5},{value:"Whether to display the label of the edge",paraId:12,tocIndex:5},{value:"boolean",paraId:13,tocIndex:6},{value:" ",paraId:13,tocIndex:6},{value:"Default:",paraId:13,tocIndex:6},{value:" ",paraId:13,tocIndex:6},{value:"true",paraId:13,tocIndex:6},{value:"Whether to enable self-loop edge",paraId:14,tocIndex:6},{value:"DisplayObject",paraId:15,tocIndex:7},{value:" ",paraId:15,tocIndex:7},{value:"| null",paraId:15,tocIndex:7},{value:'Add a marker graphic at the "end point", where the "end point" is the intersection of the edge and the target node',paraId:16,tocIndex:7},{value:"number",paraId:17,tocIndex:8},{value:" ",paraId:17,tocIndex:8},{value:"Default:",paraId:17,tocIndex:8},{value:" ",paraId:17,tocIndex:8},{value:"0",paraId:17,tocIndex:8},{value:'Adjust the position of the marker graphic at the "end point", positive offset inward, negative offset outward',paraId:18,tocIndex:8},{value:"DisplayObject",paraId:19,tocIndex:9},{value:" ",paraId:19,tocIndex:9},{value:"| null",paraId:19,tocIndex:9},{value:'Place a marker graphic on each vertex of the path except for the "start point" and "end point". In the internal implementation, because we will convert some commands in the path to C commands, these controlPoints are actually the control points of the cubic Bezier curve',paraId:20,tocIndex:9},{value:"DisplayObject",paraId:21,tocIndex:10},{value:" ",paraId:21,tocIndex:10},{value:"| null",paraId:21,tocIndex:10},{value:'Add a marker graphic at the "start point", where the "start point" is the intersection of the edge and the source node',paraId:22,tocIndex:10},{value:"number",paraId:23,tocIndex:11},{value:" ",paraId:23,tocIndex:11},{value:"Default:",paraId:23,tocIndex:11},{value:" ",paraId:23,tocIndex:11},{value:"0",paraId:23,tocIndex:11},{value:'Adjust the position of the marker graphic at the "start point", positive offset inward, negative offset outward',paraId:24,tocIndex:11},{value:"Required",paraId:25,tocIndex:11},{value:"string",paraId:26,tocIndex:12},{value:"The ID of the source node",paraId:27,tocIndex:12},{value:" This property concerning the physical origin, maintained internally by G6. In general, ",paraId:28,tocIndex:12},{value:"sourceNode",paraId:28,tocIndex:12},{value:" corresponds to the ",paraId:28,tocIndex:12},{value:"source",paraId:28,tocIndex:12},{value:" attribute of the parent level. However, in certain cases, such as when a Combo is collapsed and internal nodes are destroyed, corresponding edges will automatically connect to the parent Combo. At this point, ",paraId:28,tocIndex:12},{value:"sourceNode",paraId:28,tocIndex:12},{value:" will be changed to the ID of the parent Combo",paraId:28,tocIndex:12},{value:"string",paraId:29,tocIndex:13},{value:"The Port of the source node",paraId:30,tocIndex:13},{value:"boolean",paraId:31,tocIndex:14},{value:" ",paraId:31,tocIndex:14},{value:"Default:",paraId:31,tocIndex:14},{value:" ",paraId:31,tocIndex:14},{value:"false",paraId:31,tocIndex:14},{value:"Whether to display the start arrow of the edge",paraId:32,tocIndex:14},{value:"number",paraId:33,tocIndex:15},{value:"Offset of the start arrow",paraId:34,tocIndex:15},{value:"Required",paraId:35,tocIndex:15},{value:"string",paraId:36,tocIndex:16},{value:"The source shape. Represents the start of the edge",paraId:37,tocIndex:16},{value:"string",paraId:38,tocIndex:17},{value:"The Port of the target node",paraId:39,tocIndex:17},{value:"TextStyleProps",paraId:40},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:41,tocIndex:19},{value:"fill",paraId:42,tocIndex:19},{value:"fontSize",paraId:42,tocIndex:19},{value:"fontWeight",paraId:42,tocIndex:19},{value:"...",paraId:42,tocIndex:19},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:43,tocIndex:19},{value:"iconFill",paraId:44,tocIndex:19},{value:"iconFontSize",paraId:44,tocIndex:19},{value:"iconFontWeight",paraId:44,tocIndex:19},{value:"...",paraId:44,tocIndex:19},{value:"boolean",paraId:45,tocIndex:20},{value:" ",paraId:45,tocIndex:20},{value:"Default:",paraId:45,tocIndex:20},{value:" ",paraId:45,tocIndex:20},{value:"true",paraId:45,tocIndex:20},{value:"Indicates whether to automatically rotate the label to keep it consistent with the direction of the edge",paraId:46,tocIndex:20},{value:"string | number",paraId:47,tocIndex:21},{value:" ",paraId:47,tocIndex:21},{value:"Default:",paraId:47,tocIndex:21},{value:" ",paraId:47,tocIndex:21},{value:"'80%'",paraId:47,tocIndex:21},{value:"maxWidth of label text, the overflow part will be replaced by an ellipsis",paraId:48,tocIndex:21},{value:"number",paraId:49,tocIndex:22},{value:" ",paraId:49,tocIndex:22},{value:"Default:",paraId:49,tocIndex:22},{value:" ",paraId:49,tocIndex:22},{value:"4",paraId:49,tocIndex:22},{value:"The horizontal offset of the label parallel to the edge",paraId:50,tocIndex:22},{value:"number",paraId:51,tocIndex:23},{value:" ",paraId:51,tocIndex:23},{value:"Default:",paraId:51,tocIndex:23},{value:" ",paraId:51,tocIndex:23},{value:"0",paraId:51,tocIndex:23},{value:"The vertical offset of the label perpendicular to the edge",paraId:52,tocIndex:23},{value:"'start' | 'center' | 'end' | number",paraId:53,tocIndex:24},{value:" ",paraId:53,tocIndex:24},{value:"Default:",paraId:53,tocIndex:24},{value:" ",paraId:53,tocIndex:24},{value:"'center'",paraId:53,tocIndex:24},{value:"Label position relative to the edge (keyShape) that can be 'start', 'center', 'end' or a specific ratio (number 0-1)",paraId:54,tocIndex:24},{value:"boolean",paraId:55,tocIndex:25},{value:"Whether to show background",paraId:56,tocIndex:25},{value:"number | number[]",paraId:57,tocIndex:26},{value:" ",paraId:57,tocIndex:26},{value:"Default:",paraId:57,tocIndex:26},{value:" ",paraId:57,tocIndex:26},{value:"0",paraId:57,tocIndex:26},{value:"Label padding",paraId:58,tocIndex:26},{value:"RectStyleProps",paraId:40},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:59,tocIndex:28},{value:"fill",paraId:60,tocIndex:28},{value:"fontSize",paraId:60,tocIndex:28},{value:"fontWeight",paraId:60,tocIndex:28},{value:"...",paraId:60,tocIndex:28},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:61,tocIndex:28},{value:"iconFill",paraId:62,tocIndex:28},{value:"iconFontSize",paraId:62,tocIndex:28},{value:"iconFontWeight",paraId:62,tocIndex:28},{value:"...",paraId:62,tocIndex:28},{value:"PathStyleProps",paraId:40},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:63,tocIndex:30},{value:"fill",paraId:64,tocIndex:30},{value:"fontSize",paraId:64,tocIndex:30},{value:"fontWeight",paraId:64,tocIndex:30},{value:"...",paraId:64,tocIndex:30},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:65,tocIndex:30},{value:"iconFill",paraId:66,tocIndex:30},{value:"iconFontSize",paraId:66,tocIndex:30},{value:"iconFontWeight",paraId:66,tocIndex:30},{value:"...",paraId:66,tocIndex:30},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:67,tocIndex:32},{value:"fill",paraId:68,tocIndex:32},{value:"fontSize",paraId:68,tocIndex:32},{value:"fontWeight",paraId:68,tocIndex:32},{value:"...",paraId:68,tocIndex:32},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:69,tocIndex:32},{value:"iconFill",paraId:70,tocIndex:32},{value:"iconFontSize",paraId:70,tocIndex:32},{value:"iconFontWeight",paraId:70,tocIndex:32},{value:"...",paraId:70,tocIndex:32},{value:"PathStyleProps",paraId:40},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:71,tocIndex:34},{value:"fill",paraId:72,tocIndex:34},{value:"fontSize",paraId:72,tocIndex:34},{value:"fontWeight",paraId:72,tocIndex:34},{value:"...",paraId:72,tocIndex:34},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:73,tocIndex:34},{value:"iconFill",paraId:74,tocIndex:34},{value:"iconFontSize",paraId:74,tocIndex:34},{value:"iconFontWeight",paraId:74,tocIndex:34},{value:"...",paraId:74,tocIndex:34},{value:"ImageStyleProps",paraId:40},{value:"Excludes width,height",paraId:75,tocIndex:35},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:76,tocIndex:35},{value:"fill",paraId:77,tocIndex:35},{value:"fontSize",paraId:77,tocIndex:35},{value:"fontWeight",paraId:77,tocIndex:35},{value:"...",paraId:77,tocIndex:35},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:78,tocIndex:35},{value:"iconFill",paraId:79,tocIndex:35},{value:"iconFontSize",paraId:79,tocIndex:35},{value:"iconFontWeight",paraId:79,tocIndex:35},{value:"...",paraId:79,tocIndex:35},{value:"number | [number, number] | Float32Array | [number, number, number]",paraId:80,tocIndex:36},{value:" ",paraId:80,tocIndex:36},{value:"Default:",paraId:80,tocIndex:36},{value:" ",paraId:80,tocIndex:36},{value:"8",paraId:80,tocIndex:36},{value:"Arrow size",paraId:81,tocIndex:36},{value:"'triangle' | 'circle' | 'diamond' | 'vee' | 'rect' | 'triangleRect' | 'simple' | ((width: number, height: number) =>",paraId:82,tocIndex:37},{value:" ",paraId:82,tocIndex:37},{value:"PathArray",paraId:82,tocIndex:37},{value:")",paraId:82,tocIndex:37},{value:" ",paraId:82,tocIndex:37},{value:"Default:",paraId:82,tocIndex:37},{value:" ",paraId:82,tocIndex:37},{value:"'triangle'",paraId:82,tocIndex:37},{value:"Arrow type",paraId:83,tocIndex:37},{value:"PathStyleProps",paraId:40},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:84,tocIndex:39},{value:"fill",paraId:85,tocIndex:39},{value:"fontSize",paraId:85,tocIndex:39},{value:"fontWeight",paraId:85,tocIndex:39},{value:"...",paraId:85,tocIndex:39},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:86,tocIndex:39},{value:"iconFill",paraId:87,tocIndex:39},{value:"iconFontSize",paraId:87,tocIndex:39},{value:"iconFontWeight",paraId:87,tocIndex:39},{value:"...",paraId:87,tocIndex:39},{value:"ImageStyleProps",paraId:40},{value:"Excludes width,height",paraId:88,tocIndex:40},{value:"An expression like icon{TextStyleProps} indicates that properties of the TextStyleProps type are prefixed with icon in camelCase format.",paraId:40},{value:"TextStyleProps includes the following properties:",paraId:89,tocIndex:40},{value:"fill",paraId:90,tocIndex:40},{value:"fontSize",paraId:90,tocIndex:40},{value:"fontWeight",paraId:90,tocIndex:40},{value:"...",paraId:90,tocIndex:40},{value:"icon{TextStyleProps} means you need to use the following property names:",paraId:91,tocIndex:40},{value:"iconFill",paraId:92,tocIndex:40},{value:"iconFontSize",paraId:92,tocIndex:40},{value:"iconFontWeight",paraId:92,tocIndex:40},{value:"...",paraId:92,tocIndex:40},{value:"number | [number, number] | Float32Array | [number, number, number]",paraId:93,tocIndex:41},{value:" ",paraId:93,tocIndex:41},{value:"Default:",paraId:93,tocIndex:41},{value:" ",paraId:93,tocIndex:41},{value:"8",paraId:93,tocIndex:41},{value:"Arrow size",paraId:94,tocIndex:41},{value:"'triangle' | 'circle' | 'diamond' | 'vee' | 'rect' | 'triangleRect' | 'simple' | ((width: number, height: number) =>",paraId:95,tocIndex:42},{value:" ",paraId:95,tocIndex:42},{value:"PathArray",paraId:95,tocIndex:42},{value:")",paraId:95,tocIndex:42},{value:" ",paraId:95,tocIndex:42},{value:"Default:",paraId:95,tocIndex:42},{value:" ",paraId:95,tocIndex:42},{value:"'triangle'",paraId:95,tocIndex:42},{value:"Arrow type",paraId:96,tocIndex:42},{value:"boolean",paraId:97,tocIndex:44},{value:" ",paraId:97,tocIndex:44},{value:"Default:",paraId:97,tocIndex:44},{value:" ",paraId:97,tocIndex:44},{value:"true",paraId:97,tocIndex:44},{value:"Specify whether to draw the loop clockwise",paraId:98,tocIndex:44},{value:"number",paraId:99,tocIndex:45},{value:"Determine the position from the edge of the node keyShape to the top of the self-loop, used to specify the curvature of the self-loop, the default value is the maximum of the width or height",paraId:100,tocIndex:45},{value:"'left' | 'right' | 'top' | 'bottom' | 'left-top' | 'left-bottom' | 'right-top' | 'right-bottom' | 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'",paraId:101,tocIndex:46},{value:" ",paraId:101,tocIndex:46},{value:"Default:",paraId:101,tocIndex:46},{value:" ",paraId:101,tocIndex:46},{value:"'top'",paraId:101,tocIndex:46},{value:"The position of the edge",paraId:102,tocIndex:46}];}}]);
//# sourceMappingURL=215a17d9-async.2c854bea.js.map